//Changes made:
//select, deselect, strap, kick flash during kicking, reload animation, a lotta shit
ACTOR ShowSlugShellsInHud : Inventory {Inventory.MaxAmount 1}
ACTOR HeyIneedToPump: Inventory {inventory.maxamount 1}

ACTOR Shot_Gun : BrutalWeapon
{
	Game Doom
	SpawnID 27
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 8
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "AmmoShell"
	Weapon.AmmoType2 "ShotgunAmmo"
	Inventory.PickupMessage "You got the Shotgun! (Slot 3)"
	Inventory.PickupSound "weapons/sgpump"
	Obituary "$OB_MPSHOTGUN"
    AttackSound "None"
    +WEAPON.NOALERT
    +WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	+FORCEXYBILLBOARD
	scale 0.8
	Tag "$BDPSHOTGUN"
	Inventory.AltHUDIcon "SHTCD0"
	States
	{
	
	GrenadeThrowFlash:
	SHTA IJKLM 1
	TNT1 A 22
	SHTA MLKJI 1 //32 in total
	stop
	
	KickingFlash:
	SHTN ACEFGGGGGGFECA 1
	Goto Ready
	
	ReloadingKick:
	SSHR AAAAAAAAAAAAAA 1
	stop
	
	AirKickingFlash:
		SHTN ACEFGGGGGGGGGGFECA 1
	    Goto Ready
	
	 SlideKickingStart:
		SHTN ACEFG 1

		SHTN GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1 {
			if (CountInv("Kicking") == 0) {
				return state("SlideKickingEnd");
			}
			return state("");
		}
		Goto Ready

	 SlideKickingEnd:
		SHTN GGGGGGFECA 1
	    Goto Ready
		
	FuckYouFlash:
	SHTN ACEFGGGGGGGGGGGGGGGGGGGGGGFECA 1
	stop	
		
    Spawn:
		SHTC A 1 A_jumpifinventory("AmmoTaken",1,"Spawn2")
		LOOP
	Spawn2:
		SHTC D -1
		LOOP

	Fidget:
	   XXXX X 0 A_PlaySound("foley/ShotgunPumpMisc", 10)
	   SHTN BCDEF 1 A_WeaponReady
	   SHTN A 0 A_jumpifinventory("GlassSlugselected",1,"FidgetSlug")
	   
	   SHTN G 1 A_WeaponReady
	   XXXX X 0 A_StartSound("foley/ShotgunPumpIn", 11)
	   SHTN H 1 A_PlaySound("weapons/sgpump", 3)
	   SHTN IJKLKJ 1 A_WeaponReady
	   SHTN I 1 A_WeaponReady
	   XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
	   SHTN HGF 1 A_WeaponReady
	   XXXX X 0 A_PlaySound("foley/ShotgunPumpMisc", 10,0.7)
	   SHTN EDC 1 A_WeaponReady
	   SHTN A 0 A_TakeInventory("Reloading", 1)
	   Goto ReadyToFireAgain
	
	 FidgetSlug:
	   SHTN X 1 A_WeaponReady
	   SHTN A 0 A_TakeInventory("Reloading", 1)
	   XXXX X 0 A_StartSound("foley/ShotgunPumpIn", 11)
	   SHTN Y 1 A_PlaySound("weapons/sgpump", 3)
       SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
	   SHTN A 0 A_JumpIfInventory("Unloading",1,"Unload")
       SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	   SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
	   SHTN IJKLKJ 1 A_WeaponReady
	   SHTN I 1 A_WeaponReady
	   XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
	   SHTN YXF 1 A_WeaponReady
	   XXXX X 0 A_PlaySound("foley/ShotgunPumpMisc", 10,0.7)
	   SHTN EDC 1 A_WeaponReady
	   SHTN A 0 A_TakeInventory("Reloading", 1)
	   Goto ReadyToFireAgain
	
	
	
	//TNT1 A 0 A_ZoomFactor(1.0)
	 //SHTN BCDEFG 1 A_WeaponReady
	 //SHTN H 1 A_PlaySound("weapons/sgpump", 3)
	 //SHTN IJKLKJIHGFEDC 1 A_WeaponReady
	 //TNT1 A 0 Offset(10,36)
	 //SHOI F 1 A_WeaponReady
     //TNT1 A 0 Offset(9,40)
	 //SHOI F 1 A_WeaponReady
     //TNT1 A 0 Offset(4,40)
	 //SHOI F 1 A_WeaponReady
     //SHOI F 0 Offset(0,32)
	 //SHOI F 1 A_WeaponReady
	 //SHTN A 0 A_TakeInventory("Reloading", 1)
	 //Goto StrapIdle
		


	StrapIdle:
		TNT1 A 0
		Goto Ready

		
	ContinueSelectButShowSlugs:
	TNT1 A 0
	NULL A 0 
		{
		ChangeAmmoIcon1("SHELZ0");
		}
	TNT1 AAAAAAAAAAAA 0 A_Raise
	TNT1 AAA 1 A_Raise
	SHTN A 0 A_PlaySound("weapons/sgpump")
    Goto SelectAnimation
	
	Select:
		TNT1 A 0
		NULL A 0 
		NULL A 0 
		{ 
			if (countinv("GlassSlugSelected")==1)
			{
				A_SetCrosshairDX("BR45Ret",2000,0.5);
			}
			Else
			{
				A_SetCrosshairDX("SGUNRet", 400);
			}
		}
		Goto SelectFirstPersonLegs
		SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1) 
			
		//TNT1 A 0 A_jumpifinventory("GlassSlugselected",1,"ContinueSelectButShowSlugs")
		TNT1 AAAAAAAAAAAAAA 0 A_Raise
		TNT1 A 1 A_Raise
		TNT1 A 0 A_GunSlingerReload("ShotgunAmmo",9,"AmmoShell",1)
	ReturnFromNothing:
		SHTN A 0 A_Giveinventory("ShotgunSelected",1)
		SHTN A 0 
		{
		A_PlaySound("weapons/sgpump");
		if(countinv("GlassSlugSelected")==1)
			{
			ChangeAmmoIcon1("SHELZ0");
			}
		}
	SelectAnimation:
        TNT1 AAAA 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		SHTN A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "PuristGun")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
        SHTA MLKJI 1 A_WeaponReady(WRF_NOFIRE)
		Goto StrapIdle
	
	Ready:	
	Ready3:
		
		SHTN A 1 A_WeaponReadyDX(WRF_ALLOWRELOAD)
		NULL A 0 
		{ 
			if (countinv("GlassSlugSelected")==1)
			{
				A_SetCrosshairDX("BR45Ret",2000,0.5);
			}
			Else
			{
				A_SetCrosshairDX("SGUNRet", 400);
			}
		}
	OkToFire:
		SHTN A 1 A_WeaponReadyDX(WRF_ALLOWRELOAD)
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		//SHTN A 0 A_checksprint
        Goto Ready
		
		
	Ready2:
        SHTN A 0 {if (CountInv("Kicking") == 1) { if (CountInv("IsCrouching") == 1) { return state("SlideKickingStart");	} if (momZ != 0) {	return state("AirKickingFlash");}else {	return state("KickingFlash");}	}return state("");}
        SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload")
		SHTN A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		SHTN A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
		SHTN A 0 A_JumpIfInventory("Unloading",1,"Unload")
		//SHTN A 0 A_checksprint
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire")
		SHT8 A 1 A_WeaponReadyDX(WRF_ALLOWRELOAD)
		Loop	
		
	
	Deselect: "####" A 0 A_TakeInventory("IsPlayingDoxMod",1)
		SHTN A 0 Offset(0,32)
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("ShotgunCrosshair"));}else{A_SetCrosshair(0);}}
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_TakeInventory("TossGrenade", 1)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("UseShotgunStrap",1)
		SHTN A 0 A_TakeInventory("Fire2Activate",1)
		SHTN A 0 A_Takeinventory("PressedTwice",1)
		SHTN A 0 A_TakeInventory("PressedOnce",1)
		
        SHTN A 0 A_ZoomFactor(1.0)
		"####" A 0 A_ClearOverlays(-2,-2)
		SHTA IJKLM 1
		NULL A 0 
		{
		ChangeAmmoIcon1("SHELA0");
		}
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		Wait

		
    Fire:
	    TNT1 A 0 Offset(0,32)
		SHTN A 0 A_Takeinventory("Reloading",1)
		//SHTN A 0 A_JumpIfInventory("Zoomed",1,"Fire2")
		TNT1 A 0 A_JumpIfInventory("HeyIneedToPump",1,"Pump1")
        SHTN A 0 A_CHeckIfAmmo("ShotgunAmmo")
        TNT1 AAAA 0
		SHTN A 0 A_ZoomFactor(0.96)
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
        SHTN A 0 A_AlertMonstersDX
        SHTN A 0 A_PlaySound("weapons/sg", 1)
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
        SHTN A 0
		SHTN A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
		TNT1 A 0 
		{ 
		if (GetCvar("ManualShotgunPump")==1)
		    {
			A_GiveInventory("HeyIneedToPump",1);
			ChangeAmmoIcon2("SHTCE0");
		    } 
		}
		"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("ShotgunAmmo")<=3) { A_PlaySound("MagClick", 7); }}}
		"####" A 0 A_QuadSound
		TNT1 A 0 A_jumpifinventory("GlassSlugselected",1, "FireSlug")
		TNT1 A 0 A_GunLight
		TNT1 AAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
		//TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-3,3), 0, 0, -12, 0, random(-3,3))
		SHTN A 0 A_TakeAmmo("ShotgunAmmo",1) 
// 		SHTN A 0 A_FireBullets (5, 1, 4, 13, "DragonBreathPuff", FBF_NORANDOM)
// 		SHTN A 0 A_FireBullets (2.5, 2.5, 5, 13, "DragonBreathPuff", FBF_NORANDOM)
		SHTN A 0 A_FireBullets (5, 5, 5, 13, "ShotgunPuff", FBF_NORANDOM,8192,"decorativetracer",-4)
		SHTN A 0 A_FireBullets (2.5, 2.5, 4, 13, "ShotgunPuff2", FBF_NORANDOM,400,"decorativetracer",-4)
		SHTA A 1
		SHTA B 1 A_GunLight
		NULL A 0 A_WeaponOffset(random(-1,1),32+random(0,1) )
		SHTN A 0 A_SetPitch(-6.0 + pitch, SPF_INTERPOLATE)
		SHTN A 0 A_ZoomFactor(1.00)
		SHTA C 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		SHTA DE 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		SHTA W 1 A_SetPitch(+3.0 + pitch, SPF_INTERPOLATE)
		NULL A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,"Ready") 
		//TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,"InstaPump1")
		TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,"Ready") 
		
		Goto Pump1
		
	FireSlug:
		TNT1 A 0 A_GunLight
	    TNT1 A 0 A_FireCustomMissile("DecorativeNail", 0, 0, 0, 2, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("SlugMetalShard", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
		TNT1 A 0 A_FireCustomMissile("SlugMetalShard2", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
	    TNT1 AAA 0 A_FireCustomMissile("SlugGlass", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
		TNT1 AAA 0 A_FireCustomMissile("SlugGlass2", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
		TNT1 AA 0 A_FireCustomMissile("SlugGlass3", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
		TNT1 AAA 0 A_FireCustomMissile("SlugGlass4", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
		TNT1 AAAAAA 0 A_FireCustomMissile("SlugGlass5", random(-12,12), 0, random(-1,1), -12, 0, random(-3,3))
	    SHTN A 0 A_TakeAmmo("ShotgunAmmo",1) 
	    SHTN A 0 A_PlaySound("weapons/sgSLUG", 1)
	    SHTN A 0 A_FireBullets (0.2, 0.1, 1, 95, "ShotgunPuffSlug", FBF_NORANDOM)

		SHTA A 1
		SHTA B 1 A_GunLight
		SHTN A 0 A_SetPitch(-6.0 + pitch, SPF_INTERPOLATE)
		SHTN A 0 A_ZoomFactor(1.00)
		SHTA C 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		SHTA DE 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		SHTA W 1 A_SetPitch(+3.0 + pitch, SPF_INTERPOLATE)

	//	TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,"Ready") 
	//	SHTN A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, "Pump1")//Tactical Mode is slower to pump
		
	//	SHTN AAAAAA 1 A_SetPitch(pitch+0.6, SPF_INTERPOLATE)
	//TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,"InstaPump1")
		TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,"Ready") 
		
		Goto Pumpingslug
		
   Pump1:	
	   SHTN A 0
		"####" A 0
		"####" A 0 A_GiveInventory ("Pumping", 1)
		"####" A 0 A_GiveInventory ("GoSpecial", 1)
		 "####" A 0 A_PlaySound("foley/ShotgunPumpMisc", 10)
		"####" ABCDEFG 1
		"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,"Pump1part2")
		"####" A 0 A_jumpifinventory("ammoshell",1,"reloadfrompumpingNothingInChamber")
		Pump1Part2:
		"####" A 0 A_JumpIfInventory("Reloading",1,"ReloadFromPumping")
		"####" A 0 A_Takeinventory("ShotgunWasEmpty",1)
		"####" A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26)
		"####" A 0 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB)//Allows quick switch
		"####" X 0 A_StartSound("foley/ShotgunPumpIn", 11)
		"####" H 1 A_PlaySound("weapons/sgpump", 3)
		"####" IJ 1
		"####" A 0 A_Giveinventory("ShotgunWasEmpty",1)
		"####" AA 0
		"####" KLMN 1
		"####" A 0 A_Takeinventory("ShotgunWasEmpty",1)
		"####" X 0 A_StartSound("foley/ShotgunPumpOut", 11)
		"####" PQ 1 
		"####" FEDCB 1
		
		"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
		"####" A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
		"####" A 0 A_PlaySound("foley/ShotgunPumpMisc", 10,0.7)
		Goto ReadyToFireAgain
		"####" AA 0
		"####" PQFEDCB 1 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB|WRF_ALLOWZOOM)
		Goto ReadyToFireAgain
	 
	 InstaPump1:
	 SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	 SHTN A 0 A_takeInventory("HeyINeedToPump",1)
		Goto Ready
   
   Pump1Slug:
       SHTN X 1
	   { 
		if (GetCvar("ManualShotgunPump")==1)
		    {
			A_TakeInventory("HeyIneedToPump",1);
			ChangeAmmoIcon2("SHTCD0");
		    }
		}
	   SHTN A 0 A_FireCustomMissile("ShotCaseSlugSpawn",40,0,-8,-26)
	   SHTN A 0 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB)//Allows quick switch
	    XXXX X 0 A_StartSound("foley/ShotgunPumpIn", 11)
	   SHTN Y 1 A_PlaySound("weapons/sgpump", 3)
	   SHTN A 0 A_JumpIfInventory("TurboReload", 1, "PumpNoReload")//Tactical Mode is slower to pump
	   SHTN IJ 1 A_JumpIfInventory("Reloading",1,"InsertingShells")
	   SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,5)
	   SHTN A 0 A_JumpIfInventory("TurboReload", 1, 4)
	   SHTN A 0 A_Giveinventory("ShotgunWasEmpty",1)
	   TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1,2)
	   Goto InsertingShells
	   TNT1 AA 0
	   SHTN KLKJI 1 A_JumpIfInventory("Reloading",1,"InsertingShells")
	    XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
	   SHTN Y 1 A_JumpIfInventory("Reloading",1,"InsertingShells")
	   SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
	   SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	   SHTN XF 1
	   XXXX X 0 A_PlaySound("foley/ShotgunPumpMisc", 10,0.7)
	   SHTN EDC 1 
	   SHTN A 0 A_JumpIfInventory("Reloading",1,"InsertingShells")
	   SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
	   SHTN A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
	   SHTN A 0
	   Goto ReadyToFireAgain
Pump2:
		SHTN A 0
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SHTN A 0 A_GiveInventory ("GoSpecial", 1)
		SHTN A 0 A_TakeInventory("Reloading", 1)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_ZoomFactor(1.0)
		"####" A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
		"####" A 0 A_JumpIfInventory("NoAutoReload", 1, "Ready")
		Goto Reload
		SHTN TSFG 1
		SHTN H 1 A_PlaySound("Shotgun/Pump1", 5)
		SHTN IJ 1

		SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26)
		SHTN KLMN 1
		SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)

		SHTN A 0 A_takeinventory("reloadfrompump",1)
		SHTN H 0 A_PlaySound("weapons/sgpump", 3)
	
		SHTN PQ 1 
		SHTN FEDCB 1
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,2)
		Goto ReadyToFireAgain
		SHTN AA 0
		SHTN A 0 A_JumpIfInventory("Reloading",1,"InsertingShells")
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
		SHTN A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
		SHTN A 0
		Goto ReadyToFireAgain
		SHTN AA 0
		SHTN PQFEDCB 1 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB|WRF_ALLOWZOOM)
		Goto ReadyToFireAgain
   
   Pump2Slug:
	   SHTN X 1
	   XXXX X 0 A_StartSound("foley/ShotgunPumpIn", 11)
	   SHTN Y 1 A_PlaySound("weapons/sgpump", 3)
	   SHTN IJKLKJ 1
	   SHTN I 1
	    XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
	   SHTN Y 1
	   SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
	   SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	   SHTN XF 1
	   XXXX X 0 A_PlaySound("foley/ShotgunPumpMisc", 10,0.7)
	   SHTN EDC 1 
	   Goto ReadyToFireAgain
	   
	  PumpingSlug:
	  SHTN A 6
	    TNT1 A 0 A_StartSound("foley/ShotgunPumpIn", 11)
	   TNT1 A 0 A_PlaySound("weapons/sgpump", 3)
	   SHT9 GI 1
	   SHT9 J 1    { 
		if (GetCvar("ManualShotgunPump")==1)
		    {
			A_TakeInventory("HeyIneedToPump",1);
			ChangeAmmoIcon2("SHTCD0");
		    }
		}
	   TNT1 A 0 A_FireCustomMissile("ShotCaseslugSpawn",5,0,6,-14)
	    TNT1 A 0 A_StartSound("foley/ShotgunPumpOut", 11)
	   SHT9 JJJIHG 1
	   SHTN A 1
	   Goto ready
	   
	   
	ReadyToFireAgain:	
		SHTA A 0
		"####" FGHI 1 A_WeaponReady(1)
		"####" A 0 //A_Refire
		Goto Ready3
		
	Fire2:
		SHTN A 0 A_Takeinventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("HeyIneedToPump",1,"Pump3")
        SHTN A 0 A_CHeckIfAmmo("SHotGunAmmo")
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
		TNT1 A 0 
		{ 
		if (GetCvar("ManualShotgunPump")==1)
		    {
			A_GiveInventory("HeyIneedToPump",1);
			ChangeAmmoIcon2("SHTCE0");
		    }
		}
		"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("ShotgunAmmo")<=3) { A_PlaySound("MagClick", 7); }}}
        SHTN A 0 A_AlertMonstersDX
        SHTN A 0 A_PlaySound("weapons/sg", 1)
		SHTN A 0 A_SpawnItemEx("PlayerMuzzle1",30,0,45)
		SHTN A 0 A_jumpifinventory("GlassSlugselected",1, "Fire2Slug")
		SHTN A 0 A_FireBullets (4, 4, 5, 13, "ShotgunPuff", FBF_NORANDOM,8192,"decorativetracer",-4)
		SHTN A 0 A_FireBullets (2, 2, 4, 13, "ShotgunPuff2", FBF_NORANDOM,400,"decorativetracer",-4)

		SHTN A 0
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
		//TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, 0, 0, random(-5,5))
		SHTN A 0 A_SetPitch(-10.0 + pitch, SPF_INTERPOLATE)
		SHTN A 0 A_TakeAmmo("ShotgunAmmo",1)
		TNT1 A 0 A_GunLight
        SHT8 D 1 A_SetPitch(+2.0 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_GunLight
		SHT8 DEFGC 1 A_SetPitch(+2.0 + pitch, SPF_INTERPOLATE)
		SHT8 C 1
		//TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,"InstaPump2")
		TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,1) 
		Goto Pump3
		TNT1 A 0 A_WeaponZoom
		
	Fire2Slug:
	    SHTN A 0 A_PlaySound("weapons/sgSLUG", 1)
	    SHTN A 0 A_FireBullets (0.3, 0.2, 1, 90, "ShotgunPuffSlug", FBF_NORANDOM)
		
		SHTN A 0
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))
		//TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, 0, 0, random(-5,5))
		SHTN A 0 A_SetPitch(-10.0 + pitch, SPF_INTERPOLATE)
		SHTN A 0 A_TakeAmmo("ShotgunAmmo",1)
        SHT8 D 2 A_SetPitch(+2.0 + pitch, SPF_INTERPOLATE)
		SHT8 E 1
		SHT8 EFGC 1 A_SetPitch(+2.0 + pitch, SPF_INTERPOLATE)
		SHT8 C 1
		//TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,"InstaPump2")
		TNT1 A 0 A_JumpIf(GetCvar("ManualShotgunPump")==1,1) 
		Goto Pump3
		TNT1 A 0 A_WeaponZoom
		
   Pump3:
		SHT8 C 2	
	Pump3SkipChecks:
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		XXXX X 0 A_StartSound("foley/ShotgunPumpIn", 11)
		XXXX X 0 A_PlaySound("weapons/sgpump", 3)
		SHT8 GHIIJJ 1
		NULL A 0 
		{ 
		if (GetCvar("ManualShotgunPump")==1)
		    {
			A_TakeInventory("HeyIneedToPump",1);
			ChangeAmmoIcon2("SHTCD0");
		    }
		}
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, 1)
		SHTN A 0 A_jumpifinventory("GlassSlugselected",1, "Pump3Slug")
		SHTN A 0 A_FireCustomMissile("ShotCaseSpawnADS",40,0,17,-2)
		XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
		SHTN A 0 A_TakeInventory("ShotgunWasEmpty", 1)
		SHT8 IHHGG 1
		TNT1 A 0 A_WeaponZoom2
		
	Pump3Slug:
	    SHTN A 0 A_FireCustomMissile("ShotCaseSlugSpawnADS",40,0,17,-2)
		SHTN A 0 A_TakeInventory("ShotgunWasEmpty", 1)
		
		 XXXX X 0 A_StartSound("foley/ShotgunPumpOut", 11)
		SHT8 IHHGG 1
		TNT1 A 0 A_WeaponZoom2
		
		
	
	
	PumpNoReload:	
	   SHTN IJ 1
	   SHTN KL 1
	   SHTN KJIH 1
	   SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
	   SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	   SHTN GFEDC 1 //{if (CountInv("Kicking") == 1) { if (CountInv("IsCrouching") == 1) { return state("SlideKickingStart");	} if (momZ != 0) {	return state("AirKickingFlash");}else {	return state("KickingFlash");}	}return state("");}
	   SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
	   SHTN A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")
	   SHTN A 0
	   Goto ReadyToFireAgain
	
	InstaPump2:
	 SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1)
	 SHTN A 0 A_takeInventory("HeyINeedToPump",1)
		TNT1 A 0 A_WeaponZoom2
	
	AltFire:
        SHTN A 0
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_JumpIfInventory("Zoomed",1,"NoAim")
		//SHTN A 0 A_Giveinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.2)
		SHTN A 0 A_Giveinventory("ADSmode",1)
		//TNT1 A 0 A_SetCrosshair(41)
		SMGG A 0 A_PlaySound("ADSIN")
        SHT8 AB 1
		SHT8 C 3
		StillAiming:
		TNT1 A 0 A_WeaponZoom
		Goto Aim2
		Aim1:
			SMGG A 0 A_ZoomFactor(1.2)
			SHT8 C 1 A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY)
			TNT1 A 0 A_jumpifinventory("reloading",1,"reload")
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"Fire2")
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1")
			Goto noaim
		Aim2:
			SMGG A 0 A_ZoomFactor(1.2)
			SHT8 C 1 A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY)
			TNT1 A 0 A_jumpifinventory("reloading",1,"reload")
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"Fire2")
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"NoAim")
			LOOP
	
	NoAim:	
        TNT1 AAAAAA 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_TakeInventory("Fire2Activate",1)
		SHTN A 0 A_Takeinventory("PressedTwice",1)
		SHTN A 0 A_TakeInventory("PressedOnce",1)
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("ShotgunCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_PlaySound("ADSOUT")
		SHT8 BA 1
        Goto Ready
		
	
		
		
	SprintOverlay:
		SHTA RSTU 1
		KeepSprinting:
		SHTA V 1 A_WeaponReadyDX(0,FALSE,FALSE)
		TNT1 A 0 A_KeepSprinting
		
	ReturnFromSprint:
		SHTA UTSR 1 A_WeaponReadyDX
		Goto ready
		
	
		ReloadFromPumpingNothingInChamber:
		TNT1 A 0 A_giveinventory("shotgunwasempty",1)
    	ReloadFromPumping:
		TNT1 A 0 A_giveinventory("reloadfrompump",1)
		SHTN A 0 A_Takeinventory("Reloading",1)
		SHTN AA 0 A_JumpIfInventory("ShotgunAmmo",0,"Pump2")
		SHTN A 0 A_JumpIfInventory("AmmoShell", 1, 2)
		Goto Pump2+38
		SHTN AA 0
		SHTN ST 1
		Goto InsertingShells

	ReloadWithNoAmmoLeft:
	Reload:
		2HTN A 0
		"####" "#" 0 A_JumpIfInventory("Zoomed", 1,"NoAim")
		2HTN A 0 A_TakeInventory("Reloading", 1)
		SHTN A 0 A_JumpIfInventory("AmmoShell", 1, 2)
		Goto Ready
		SHTN AA 0
		SHTN AA 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")//Check if reloads are disabled.
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_Takeinventory("ZoomHold",1)
		SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",9,"Ready")
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally")//Check if there is a shell in the chamber
		SHTN A 0 A_GiveInventory("ShotgunWasEmpty", 1)//This means there is no shell in the chamber
	ReloadNormally:
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,2)//If there is no reserve ammo, don't reload, go back to Ready
		Goto Ready
		SHTN AAA 0
		SHTN AA 0 A_JumpIfInventory("TurboReload", 1, "TurboReload")//Check if reloads are disabled.
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_Takeinventory("ZoomHold",1)
		SHTN A 1 A_GiveInventory ("Pumping", 1)
		SHTN BCDEF 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHTN ST 1  A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
	InsertingShells:
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,2)//if there are no more reserve shells, finish reload.
		Goto Pump2
		SHTN AAA 0
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SSHR AA 0 A_TakeInventory("Reloading", 1)
		SHTN AA 0 A_JumpIfInventory("ShotgunAmmo",9,"CheckIfFinishReload")
		SHTN AA 0 A_JumpIfInventory("ShotgunAmmo",8,"CheckIfFinishReload")
		SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1,TIF_NOTAKEINFINITE)
	InsertShellAnimation:
		SHTN A 0
		SHTN UUUV 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHT5 A 0 A_jumpifinventory("GlassSlugSelected",1,2)
		SHTN A 0
		"####" W 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		TNT1 A 0 A_PlaySound("insertshell",5)
		SHTN X 1 A_WEAPONREADY(WRF_NOBOB|WRF_ALLOWZOOM)
		SHTN YZ 1 A_WEAPONREADY(WRF_NOBOB|WRF_ALLOWZOOM)
		SHTN "[]" 1 A_WEAPONREADY(WRF_NOBOB|WRF_ALLOWZOOM)
		SHTN AA 0 A_JumpIfInventory("Reloading", 1, "FinishedInsertingShells")
		SHTN AA 0 A_JumpIfInventory("ShotgunAmmo",0,"FinishedInsertingShells")//If there are 8+1 shells, stop it immediately
		Goto InsertingShells

	CheckIfFinishReload:
		//SSHR A 1

		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "FinishedInsertingShells")//If shotgun was empty,
		//Play the insert shell animation again, and insert the 9th shell
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,"continuecheck")//if there are no more reserve shells, finish reload.
		Goto Pump2
		ContinueCheck:

		SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1,TIF_NOTAKEINFINITE)
		Goto InsertShellAnimation

	FinishedInsertingShells:
		SHTN AA 0 A_Takeinventory("Reloading",1)
		SHTN AA 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
		SHTN A 0 A_JumpIfInventory("reloadfrompump", 1, "pump2")
		XXXX X 0 A_PlaySound("foley/ShotgunReloadLower", 10)
		SHTN TS 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHTN FEDCB 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHTN AA 0 A_Takeinventory("Reloading",1)
		Goto ReadyToFireAgain
		
	
	 TurboReload:
		SHSS BC 0
	TurboBullets:	
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",9,"FinishTurboReload")
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3)
        Goto FinishTurboReload
        TNT1 AAAA 0
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1)
		Goto TurboBullets
	FinishTurboReload:
		SHTN A 1
		SHTN A 1 A_Refire
		Goto Ready3
		
	TurboReload2:
		SHSS BC 0
	TurboBullets2:	
		SHTN A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",9,"FinishTurboReload")
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3)
        Goto FinishTurboReload2
        TNT1 AAAA 0
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1)
		SHTN A 0 A_Takeinventory("AmmoShell",1)
		Goto TurboBullets2
	FinishTurboReload2:
		SHT8 A 1 A_Refire
		Goto Ready2

      PuristGun:
		TNT1 A 1
		SHTN A 0 A_GiveInventory("ClassicShotgun", 1)
		SHTN A 0 A_TakeInventory("Shot_Gun", 1)
		TNT1 A 10
		Goto Ready2
		
	
	FunniReload:
	    SHTN A 0 A_JumpIfInventory("Zoomed",1,2)
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",9,"Fidget")
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo", 1, "FunniReloadNoMoreChecks")//Check if there is a shell in the chamber
		SHTN A 0 A_GiveInventory("ShotgunWasEmpty", 1)//This means there is no shell in the chamber
	FunniReloadNoMoreChecks:
	    SHTN B 1 A_GiveInventory ("Pumping", 1)
		SHTN CDE 1
		SSHR L 1
		SSHR A 3
	SHTN A 0 A_jumpifinventory("GlassSlugselected",1,"FunniReloadSlug")
		SGR2 ABCCDD 1
		RIFG A 0 A_JumpIfInventory("ShotgunAmmo",1,"InsertFunnyShells2")//8+1 effect
		Goto InsertFunnyShells
	FunniReloadSlug:
	    SGR2 NOPPQQ 1
		RIFG A 0 A_JumpIfInventory("ShotgunAmmo",1,"InsertFunnyShells2")//8+1 effect
		Goto InsertFunnyShells
		
	InsertFunnyShells:
		TNT1 AAAA 0
		RIFG A 0 A_JumpIfInventory("ShotgunAmmo",8,15)
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,3)
		Goto FinishFunnyReloading
        TNT1 AAAAAA 0
		RIFG A 0 A_Giveinventory("ShotgunAmmo",1)
		RIFG A 0 A_Takeinventory("AmmoShell",1)
		Goto InsertFunnyShells
		
		TNT1 AAAAAAAAAA 0
		RIFG A 0 A_Takeinventory("Reloading",1)
		
		RIFG A 0 A_Refire
        Goto FinishFunnyReloading
		TNT1 AAAA 0
		RIFG A 0 A_Takeinventory("Reloading",1)
		
		RIFG A 0 A_Refire
        Goto FinishFunnyReloading
		
	InsertFunnyShells2:
		TNT1 AAAA 0
		RIFG A 0 A_JumpIfInventory("ShotgunAmmo",9,15)
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,3)
		Goto FinishFunnyReloading
        TNT1 AAAAAA 0
		RIFG A 0 A_Giveinventory("ShotgunAmmo",1)
		RIFG A 0 A_Takeinventory("AmmoShell",1)
		Goto InsertFunnyShells2
		
		TNT1 AAAAAAAAAA 0
		RIFG A 0 A_Takeinventory("Reloading",1)
		
		RIFG A 0 A_Refire
        Goto FinishFunnyReloading
		TNT1 AAAA 0
		RIFG A 0 A_Takeinventory("Reloading",1)
		
		RIFG A 0 A_Refire
        Goto FinishFunnyReloading
	
	FinishFunnyReloading:
	NULL A 0 A_PlaySound("SHELLIN2")
	SHTN A 0 A_jumpifinventory("GlassSlugselected",1,"FinishFunnyReloadingSlug")
	//SHTN AAA 0 A_FireCustomMissile("ShotCaseSpawn",random(0,359),0,random(-10,-6),random(-30,30))
	SHTN AAA 0 A_FireCustomMissile("ShotgunCasing",random(-4,-75),0,-3,random(-3,-6),0,random(30,-30)) 
	    SGR2 EFGHIJKLM 1 A_WeaponReady(WRF_NOBOB)
		SSHR A 2 A_WeaponReady(WRF_NOBOB)
		Goto FinishedInsertingShells
	FinishFunnyReloadingSlug:
	    SHTN AAA 0 A_FireCustomMissile("ShotgunCasingSlug",random(-4,-75),0,-3,random(-3,-6),0,random(30,-30)) 
	
	    SGR2 RSTUVWXYM 1 A_WeaponReady(WRF_NOBOB)
		SSHR A 2 A_WeaponReady(WRF_NOBOB)
		Goto FinishedInsertingShells
		
	Unload:
		//SHTN A 1
		SHTN A 0 A_Takeinventory("Unloading",1)	
		NULL A 0		
        {
            A_Takeinventory("Unloading",1);	
            if (CountInv("HeyIneedToPump") == 1 )
            { 
            If (CountInv("Zoomed") == 1 )
              {Return state("Pump3");}
              else
              {Return state("Pump1");}

            return state("Ready");
            }
        return state("UnloadContinue");
        }
	UnloadContinue:
		SHTN A 0 A_ZoomFactor(1.0)
		//SHTN A 0 A_Takeinventory("Unloading",1)		
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_JumpIfInventory("HeyIneedToPump",1,"Pump1")
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
        Goto OkToFire
        TNT1 AAA 0
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_GiveInventory ("Pumping", 1)
		SHTN A 0 A_Takeinventory("Unloading",1)
		SHTN ABCDEF 1
		
	RemoveBullets:
	    SHTN A 0 A_jumpifinventory("GlassSlugselected",1,"RemoveBulletsSlug")
	    SHTN A 0 A_JumpIfInventory("Unloading",1,"FinishUnload")
		TNT1 A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
		Goto FinishUnload
        TNT1 AAA 0
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"FInishUnload")
		SHTN A 0 A_Giveinventory("ShotgunWasEmpty",1)
		SHTN G 1 A_WeaponReady(WRF_NOFIRE | WRF_NOBOB)
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1)
		SHTN A 0 A_Giveinventory("AmmoShell",1)
		
		
	   SHTN H 1 A_PlaySound("weapons/sgpump", 3)
	   //SHTN A 0 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
	   SHTN IJ 1
	   //SHTN A 0 A_SetPitch(-1 + pitch, SPF_INTERPOLATE)
	   SHTN KL 1
	   SHTN KJIH 1
	   SHTN GF 1
	   Goto RemoveBullets
	   
	FInishUnload:
	    SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
        TNT1 AA 0
		SHTN EDCBA 1
		SHTN A 0 A_Takeinventory("Unloading",1)
		SHTN A 0 A_Takeinventory("Reloading",1)
		Goto StrapIdle	
		
	RemoveBulletsSlug:
	    SHTN A 0 A_JumpIfInventory("Unloading",1,"FinishUnload")
		TNT1 A 0
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
		Goto FinishUnload
        TNT1 AAA 0
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"FInishUnload")
		SHTN X 1 A_WeaponReady(WRF_NOFIRE | WRF_NOBOB)
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1)
		SHTN A 0 A_Giveinventory("AmmoShell",1)
		
		
	   SHTN Y 1 A_PlaySound("weapons/sgpump", 3)
	   //SHTN A 0 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
	   SHTN IJ 1
	   //SHTN A 0 A_SetPitch(-1 + pitch, SPF_INTERPOLATE)
	   SHTN KL 1
	   SHTN KJIY 1
	   SHTN XF 1
	   Goto RemoveBulletsSlug
		
		
	DoKickReloading:
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
        SHTN A 0 A_PlaySound("KICK")
		SHTN A 0 SetPlayerProperty(0,1,0)
		3ICK A 0 A_JumpIfInventory("GreenBloodOnBoots",1,4)
	    2ICK A 0 A_JumpIfInventory("BlueBloodOnBoots",1,3)
	    1ICK A 0 A_JumpIfInventory("RedBloodOnBoots",1,2)
	    KICK N 0
		"####" AA 0
		"####" A 0 A_GunFlash("ReloadingKick")
        "####" A 0
		"####" BCD 1
		"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
        "####" H 3
		"####" A 0 A_Takeinventory("Kicking",1)
		"####" I 1
		"####" GFEDCBA 1 
		RIBA A 0 A_Takeinventory("Kicking",1)
		SHTN A 0 SetPlayerProperty(0,0,0)
		Goto InsertingShells
		
	Steady:
		TNT1 A 1
		Goto Ready
		
		

	NoAmmo:
		RIFG A 0
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("ShotgunCrosshair"));}else{A_SetCrosshair(0);}}
		RIFG A 0 A_ZoomFactor(1.0)
		RIFG A 0 A_Takeinventory("Zoomed",1)
		RIFG A 0 A_Takeinventory("ADSmode",1)
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		TNT1 A 0 A_PlaySound("weapons/empty", 4)
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		RIFG A 0 {if (CountInv("Kicking") == 1) { if (CountInv("IsCrouching") == 1) { return state("SlideKickingStart");	} if (momZ != 0) {	return state("AirKickingFlash");}else {	return state("KickingFlash");}	}return state("");}
		SHTN A 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY)
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload")
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, "Ready3")
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload")
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2")
		Goto Ready3
		
		
	NoAmmo3:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint")
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		RIFG A 0 {if (CountInv("Kicking") == 1) { if (CountInv("IsCrouching") == 1) { return state("SlideKickingStart");	} if (momZ != 0) {	return state("AirKickingFlash");}else {	return state("KickingFlash");}	}return state("");}
		TNT1 A 0 A_JumpIfInventory("HeyIneedToPump",1,"Pump3SkipChecks")
		SHT8 A 4 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY)
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload")
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload2")
		TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, "Ready3")
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload")
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo3")
		Goto Ready3	
	
	DualWield:
	    TNT1 A 0
		XXXX X 0 A_PlaySound("foley/ShotgunReloadRaise", 10)
		TNT1 A 0 A_jumpifinventory("GlassSlugselected",1,"TakeSlugs")
		TNT1 A 0 A_Print("\cjGlass slugs selected",1)
		SHTN ABCDEFST 1
		SHTN UUUV 1
		SHT5 W 1
		TNT1 A 0 A_GiveInventory("ShowSlugShellsInHud",1)
        SHTN X 1 A_PlaySound("insertshell")
		NULL A 0 
		{
		ChangeAmmoIcon1("SHELZ0");
		A_giveinventory("glassslugselected",1);
	
		A_SetCrosshairDX("BR45Ret",2000,0.5);
	
		}
		SHTN YZ 1
		SHTN "[]" 1
	//	TNT1 A 0 A_GiveInventory("HasSlugShells",1)
	    
		TNT1 A 0 A_TakeInventory("StartDualWield",1)
		XXXX X 0 A_PlaySound("foley/ShotgunReloadLower", 10)
		SHTN TS 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHTN FEDCB 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		Goto ReadyToFireAgain
		
	TakeSlugs:
	    TNT1 A 0 A_Print("\cgBuckshot selected",1)
		SHTN ABCDEFST 1
		SHTN UUUVW 1
		
		TNT1 A 0 A_TakeInventory("ShowSlugShellsInHud",1)
        SHTN X 1 A_PlaySound("insertshell")
		NULL A 0 
		{
		A_takeinventory("glassslugselected",1);
		ChangeAmmoIcon1("SHELA0");
		A_SetCrosshairDX("SGUNRet",400);
		}
		SHTN YZ 1
		SHTN "[]" 1
	//	TNT1 A 0 A_GiveInventory("HasSlugShells",1)
	    
		TNT1 A 0 A_TakeInventory("StartDualWield",1)
		XXXX X 0 A_PlaySound("foley/ShotgunReloadLower", 10)
		SHTN TS 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		SHTN FEDCB 1 A_WEAPONREADY(WRF_NOBOB|WRF_NOFIRE|WRF_ALLOWZOOM)
		Goto ReadyToFireAgain
	
	
	}
}

ACTOR ShotgunAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 9
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 9
   Inventory.Icon "SHTCD0"
}

ACTOR HasSlugShells : Inventory
{
   Inventory.MaxAmount 1
}

// ACTOR DragonBreathPuff: HitPuff
// {
// DamageType Fire
// States
// {
// Spawn:
// 	TNT1 A 0
// 	TNT1 A 0 A_JumpIfInventory("lowgraphicsmode", 1, "DeathCheap")
// 	TNT1 AA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
// 	TNT1 A 0 A_CustomMissile ("BDExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90))
// 	TNT1 A 0 A_CustomMissile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90))
// 	TNT1 A 0 A_CustomMissile ("BDExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90))
// 	EXPL A 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (0, 90))
// 	//FRFX ZZZ 0 BRIGHT A_CustomMissile ("BigBlackSmoke", 2, 0, random (0, 360), 2, random (0, 30))
// 	//TNT1 A 2 A_SpawnItem("BurningGroundLowDamage")
// 	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15))
// 	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35))
// 	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35))
// 	TNT1 AA 20 A_CustomMissile ("BigBlackSmoke", 0, 0, random (0, 360), 2, random (40, 160))
// 	Stop
// }}

ACTOR DecorativeNail: FastProjectile
{
Projectile
Speed 120
Scale 0.6
Radius 6
Height 4
    States
	{
	Spawn:
	NAIL A 0 NoDelay
	NAIL X 0 A_JumpIf(GetCVAR("Dox_3DNail")==1,"FLY")
	NAIL A 0
    FLY:
	NAIL "#" 0 A_FaceMovementDirection(0,360,0)//,FMDF_INTERPOLATE)
    NAIL "#" -1
	stop
	
	XDeath:
	TNT1 A 0 
	stop
	
	Death:
	NAIL X 0 A_JumpIf(GetCVAR("Dox_3DNail")==1,"Stay3D")
	//NAIL "#" 0 //A_FaceMovementDirection(0,360,0)//,FMDF_INTERPOLATE)
	NAIL A 340
	NAIL AAAAAAAAAA 1 A_FadeOut(0.1)
	stop
	Stay3D:
	NAIL X 340
	NAIL XXXXXXXXXX 1 A_FadeOut(0.1)
	stop
	
	}
}

ACTOR SlugGlass//: FastProjectile
{
Projectile
Renderstyle Add
+forcexybillboard
+CLIENTSIDEONLY
-NOGRAVITY
+bounceonactors
+NOTELEPORT
radius 2
height 2
BounceType Doom
Speed 70
BounceFactor 0.5
WallBounceFactor 0.3
Scale 0.3
Alpha 0.9
+ROLLSPRITE
+ROLLCENTER
    States
	{
	Spawn:
	TNT1 A 0
	GLSP A 0 A_SetRoll(random(0,180))
	GLSP ABCDEFGH 3 A_SetRoll(Roll+6)
	Goto Spawn+2
    Death:
	GLSP C 200
    Stop
	}
}

ACTOR SlugGlass2: SlugGlass
{
Speed 80
BounceFactor 0.5
WallBounceFactor 0.2
Scale 0.3
}

ACTOR SlugGlass3: SlugGlass
{
Speed 95
BounceFactor 0.6
WallBounceFactor 0.2
Scale 0.4
}

ACTOR SlugGlass4: SlugGlass
{
Speed 110
BounceFactor 0.5
WallBounceFactor 0.1
Scale 0.2
}

ACTOR SlugGlass5: SlugGlass
{
Speed 100
BounceFactor 0.3
WallBounceFactor 0.3
Scale 0.12
}

ACTOR SlugMetalShard: SlugGlass
{
Renderstyle normal
Speed 55
BounceFactor 0.3
WallBounceFactor 0.3
Scale 0.09
    States
	{
	Spawn:
	JNK1 ABCDEFGH 3
	Loop
	Death:
	JNK1 H 200
	stop
	}
}

ACTOR SlugMetalShard2: SlugMetalShard
{
Speed 60
BounceFactor 0.4
WallBounceFactor 0.3
Scale 0.1
}

ACTOR IfReloadAgainStopReloading: Inventory {inventory.maxamount 1}
