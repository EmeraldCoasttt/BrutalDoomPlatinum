
class Modifier_StayFrosty : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STFROST";
		BDPModifier.DisplayName "Stay Frosty";
		BDPModifier.Description "Athletic actions require Stamina";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.istactical = true;
		}
	}

}

class Modifier_Chatterbox : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STCHAT";
		BDPModifier.DisplayName "Chatterbox";
		BDPModifier.Description "Doomguy says one liners automatically";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.ischatterbox = true;
		}
	}
	
	Override void worldthingdamaged(Worldevent e)
	{
		If(e.thing && e.thing.bisMonster && e.thing.health <= 0 && e.damagesource && e.damagesource is "Brutal_PlayerBase")
		{
			//console.printf(e.damagetype);
			//console.printf(e.damagesource.getclassname());
			 brutal_playerbase BDPPlayer = brutal_playerbase(e.damagesource);
			 If(e.damagetype == 'ExtremePunches')
			 {
				 If(BDPPlayer && !bdpplayer.tauntcooldown && random(1,3) > 1 )
				 {
					BDPPlayer.berserktaunt = true;
				 }
			 }
			 Else If(BDPPlayer && !bdpplayer.tauntcooldown && random(1,20) == 1)
			 {
				BDPPlayer.killtaunt = true;
				BDPPlayer.taunttimer = 15;
			 }
			
		}
		
	}


}

class Modifier_Triathlon : BDPModifier
{
	Default
	{
		BDPModifier.Icon "TRIST00";
		BDPModifier.DisplayName "Triathlon";
		BDPModifier.Description "You can only carry 3 weapons at a time";
	}
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.triathlon = true;
		}
	}

}

class Modifier_Reversal : BDPModifier
{
	Default
	{
		BDPModifier.Icon "MODPRY1";
		BDPModifier.DisplayName "Return To Sender";
		BDPModifier.Description "Berserked Melee attacks can parry projectiles, dealing increased damage";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.reversalmodifier = true;
		}
	}

}

class Modifier_OneUpmanship : BDPModifier
{
	Default
	{
		BDPModifier.Icon "BJBST00";
		BDPModifier.DisplayName "One-Upmanship";
		BDPModifier.Description "Soul Spheres grant extra lives";
	}
	Override void worldthingspawned(Worldevent e)
	{
	If(e.thing && e.thing.getclassname() == "LifeSphere")
		{
			Actor.spawn("LifeSphereOneUp",e.thing.pos);
			E.thing.destroy();
		}
		
	If(e.thing  && e.thing.getclassname() == "EnergySphere")
		{
			Actor.spawn("EnergySphereOneUp",e.thing.pos);
			E.thing.destroy();
		}
	
	}
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.oneupmanship = true;
		}
	}

}

class Modifier_UltraNightmare : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STFXDTH4";
		BDPModifier.DisplayName "Ultra Nightmare";
		BDPModifier.Description "Death is permanent. Good luck!";
	}
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.ultranightmare = true;
		}
	}

}

class Modifier_SkullCrusher : BDPModifier
{
	Default
	{
		BDPModifier.Icon "D4RST01";
		BDPModifier.DisplayName "Skullcrusher";
		BDPModifier.Description "HUD shows killstreaks";
	}
	

	Override void worldthingdamaged(Worldevent e)
	{
		If(e.thing && e.thing.bisMonster && e.thing.health <= 0 && e.damagesource && e.damagesource is "Brutal_PlayerBase")
		{
			//console.printf(e.damagetype);
			//console.printf(e.damagesource.getclassname());
			 brutal_playerbase BDPPlayer = brutal_playerbase(e.damagesource);
			If(BDPPLAYER)
			{
				BDPPlayer.killstreak ++;
				BDPPlayer.killstreaktimer = 140;
			}
			 
			
		}
		
	}


}


class Modifier_ScoreMaster : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STNERD";
		BDPModifier.DisplayName "Scoremaster";
		BDPModifier.Description "Gain points by killing monsters and collecting items\n\n 50k points grants an extra life";
	}
	

	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.scoremaster = true;
		}
	}
	
	Override void worldthingdamaged(Worldevent e)
	{
		If(e.thing && e.thing.bisMonster && e.thing.health <= 0 && e.damagesource && e.damagesource is "Brutal_PlayerBase")
		{
			//console.printf(e.damagetype);
			//console.printf(e.damagesource.getclassname());
			 brutal_playerbase BDPPlayer = brutal_playerbase(e.damagesource);
			If(BDPPLAYER)
			{
				If(BDPPlayer.killstreak > 1)
				{
					double potentialscore = e.thing.getspawnhealth();
					double scoremodifier = (BDPPlayer.killstreak - 1);
					scoremodifier *= 0.1;
					scoremodifier += 1;
					potentialscore *= scoremodifier;
					//Console.printf("%d",potentialscore);
					BDPPlayer.score += potentialscore;
				}
				else
				{
					BDPPlayer.score += (e.thing.getspawnhealth());
				}
			}
			 
			
		}
		
	}


}



class Modifier_ShockFactor : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STSHOCK";
		BDPModifier.DisplayName "Shock Factor";
		BDPModifier.Description "Demons are hyper-aware of you";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.shockfactor = true;
		}
	}
	
	Override void worldthingspawned(Worldevent e)
	{
		If(e.thing && e.thing.bismonster)
		{
			e.thing.bambush = false;
		}
	}
	
}


class Modifier_PerfectHatred : BDPModifier
{
	Default
	{
		BDPModifier.Icon "FC0OUCH4";
		BDPModifier.DisplayName "Perfect Hatred";
		BDPModifier.Description "Demons are permanently enraged";
	}
	
	Override void worldthingspawned(Worldevent e)
	{
		If(e.thing && e.thing.bismonster)
		{
			e.thing.bmissilemore = true;
			//e.thing.bmissileevenmore = true;
			e.thing.speed = (e.thing.speed * 1.5);
			e.thing.bnopain = true;
			e.thing.bnoinfighting = TRUE;
			e.thing.giveinventory("pissedarmor",1);
			//e.thing.A_giveinventory("thisreallypissesmeoff",(e.thing.health / 70));
		}
	}
	
}

class Modifier_Realism : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STREAL";
		BDPModifier.DisplayName "Realism";
		BDPModifier.Description "Player recieves 400% damage";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.realism = true;
		}
	}



}



class Modifier_Gunslinger : BDPModifier
{
	Default
	{
		BDPModifier.Icon "CIGST10";
		BDPModifier.DisplayName "Gunslinger";
		BDPModifier.Description "Weapons deselected for 5 or more seconds instantly reload";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			for(let item = dplr.Inv; item.Inv; item = item.Inv)
			{
				let dweap = BrutalWeapon(item);
				if(!dweap) continue;
				dweap.gunslinger = true;
			}
		}
	}

}






class Modifier_SequenceBreak : BDPModifier
{
	Default
	{
		BDPModifier.Icon "CYBST00";
		BDPModifier.DisplayName "Sequence Break";
		BDPModifier.Description "Doors can be kicked down whether you have the key or not.";
	}
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.sequencebreak = true;
		}
	}

}

class Modifier_MaximumOverdrive : BDPModifier
{
	Default
	{
		BDPModifier.Icon "AUGHST0";
		BDPModifier.DisplayName "Maximum Overdrive";
		BDPModifier.Description "A Booster Frame is equipped at all times!";
	}
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.maximumoverdrive = true;
		}
	}

}

class Modifier_Mjolnir : BDPModifier
{
	Default
	{
		BDPModifier.Icon "HLMST00";
		BDPModifier.DisplayName "Mjolnir";
		BDPModifier.Description "Permanent Energy Armor powerup";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.spawnwitharmor = true;
		}
	}
	
	Override void worldthingspawned(Worldevent e)
	{
		If(e.thing && e.thing is "EnergyArmor")
		{
			Actor.spawn("SkullTagArmor",e.thing.pos);
			E.thing.destroy();
		}
		
	}

}



class Modifier_ManAndAHalf : BDPModifier
{
	Default
	{
		BDPModifier.Icon "STMAN";
		BDPModifier.DisplayName "Man And A Half";
		BDPModifier.Description "Start every level berserked";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.spawnberserked = true;
		}
	}
	
	Override void worldthingspawned(Worldevent e)
	{
		If(e.thing && e.thing is "BerserkPack")
		{
			Actor.spawn("DemonRuneSpawner",e.thing.pos);
			E.thing.destroy();
		}
		
	}
	
}

class Modifier_Gluttony : BDPModifier
{
	Default
	{
		BDPModifier.Icon "MANST01";
		BDPModifier.DisplayName "Gluttony";
		BDPModifier.Description "Reloading discards the contents of the current magazine";
	}
	
	override void WorldTick()
	{
		for(int i = 0; i < MAXPLAYERS; i++)
		{
			if(!PlayerInGame[i]) continue;
			PlayerInfo plr = players[i];
			if(!plr) continue;
			
			let dplr = Brutal_PlayerBase(plr.mo);
			if(!dplr) continue;
			
			dplr.gluttony = true;
		}
	}

}

