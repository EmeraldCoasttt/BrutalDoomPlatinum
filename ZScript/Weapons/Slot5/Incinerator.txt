
CLASS Incinerator : BrutalWeapon
{
	Default
	{
		Height 20;
		Weapon.SelectionOrder 3100;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 12;
		Weapon.AmmoType1 "AmmoRocket";
		Weapon.AmmoType2 "FlamerAmmo";
		Inventory.PickupSound "FLMRPUP";
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOAUTOFIRE;
		+WEAPON.EXPLOSIVE;
		//+WEAPON.NO_AUTO_SWITCH
		Inventory.PickupMessage "You got the Incinerator! (Slot 5)";
		Tag "$BDPFLAMER";
		Inventory.AltHUDIcon "FLMTF0";
		+forcexybillboard;
	}
	States
	{
	
	GrenadeThrowFlash:
	FLRS BCDE 1;
	TNT1 A 24;
	FLRS EDCB 1;//32 in total
	stop;
	
	KickingFlash:
	FLMT GHIJJJJJJJJJJIHG 1;
	Goto Ready;
	AirKickingFlash:
	    FLMT GHIJJJJJJJJJJJJIHG 1; //18
	    Goto Ready;
	SlideKickingStart:
	    FLMT KLMN 1;
		FLMT NNNNNNNNNNNNNNNNNN 1; //18
		FLMT NMLK 1;
		Goto Ready;
		
	FuckYouFlash:
		FLMT GHIJJJJJJJJJJJJJJJJJJJJJJJJIHG 1;
	    stop;
		
	Ready:
	Ready3:
		FLMT ABC 1 A_WeaponReadyDX();
		Goto Ready3;
		
	SprintOverlay:
		
		FLMT GHI 1;
		KeepSprinting:
		FLMT J 1 A_weaponreadyDX(WRF_ALLOWRELOAD,FALSE,FALSE);
	TNT1 A 0 A_keepsprinting();
	ReturnFromSprint:
		FLMT IHG 1;
		Goto ready;
		
	DryFire:
	    FLMT ABCAC 1;
		FLMT A 0 A_StartSound("weapons/empty");
		Goto Ready;
	NoAmmo:
		FLMT A 0 A_StartSound("weapons/empty");
	    FLMT ABCABC 1;
		
		TNT1 A 0 A_Refire("NoAmmo");
		TNT1 A 0 A_jumpifinventory("AmmoRocket",1,"reload");
		Goto Ready;
	
	Deselect: "####" A 0 A_TakeInventory("IsPlayingDoxMod",1);
	"####" A 0 A_ClearOverlays(-2,-2);
	    TNT1 A 0 A_StopSound(CHAN_WEAPON);
		TNT1 A 0 A_TakeInventory("TossGrenade", 1);
		FLRS ABCDE 1;
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower();
		TNT1 A 1 A_Lower();
		Loop;
	Select:
		TNT1 A 0;
		TNT1 A 0 A_SetCrosshairDX("NadeRet", 800, 1.0);
		Goto SelectFirstPersonLegs;
		SelectContinue: 
		"####" A 0 A_GiveInventory("IsPlayingDoxMod",1);
		
		TNT1 A 0 A_Giveinventory("FlameCannonSelected",1);
		TNT1 A 0 A_StartSound("FLMRDRAW");
		TNT1 AAAA 1;
		TNT1 AAAAAAAAAAAAAAA 0 A_Raise();
		Goto SelectAnimation;
		
	SelectAnimation:
		FLRS EDCBA 1 A_WeaponReady(WRF_NOFIRE);
		Goto Ready;
		
    Spawn:
        FLMT F 1;
        Loop;
		
   Fire:
        FLMT A 0;
		FLMT A 0 A_JumpIf(waterlevel > 1, "DryFire");
        FLMT A 0 A_JumpIfInventory("FlamerAmmo", 1, "Flamethrower");
		FLMT A 0 A_StopSound(CHAN_WEAPON);
		Goto NoAmmo;
		
	Flamethrower:
        FLMT A 0 BRIGHT A_Fireprojectile("NewIncineratorFlame",0,false,0,-12);
		TNT1 A 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9));
		TNT1 AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9));
		FLMT A 0 A_PlaySound("FLAMER", CHAN_WEAPON, 1, 1);
		FLMT A 0 A_TakeAmmo("FlamerAmmo", 1);
		FLMT A 0 A_GunLight(750,2);
		FLMT D 1; //A_SetAngle(random(1, -1) + angle, SPF_INTERPOLATE)
		FLMT A 0 A_GunLight(600,2);
		FLMT E 1;
		FLMT A 0 BRIGHT; //A_SetPitch(random(1, -1) + pitch, SPF_INTERPOLATE)
		
		FLMT A 0 A_JumpIfInventory("FlamerAmmo", 1, 2);
		FLMT A 0 A_PlaySound("FLAMSTOP", CHAN_WEAPON);
		Goto NoAmmo;
		FLMT A 0 A_Refire();
		FLMT A 0 A_GunLight(500,3);
		FLMT A 0 A_PlaySound("FLAMSTOP", CHAN_WEAPON);
		Goto Ready;
	
	
	Altfire:
		FLMG A 0 A_JumpIf(waterlevel > 1, "DryFire");
        FLMG A 0 A_JumpIfInventory("FlamerAmmo", 5, "SmokeFireball");
		FLMG A 0 A_JumpIfInventory("PowerSpeed2", 1, "SmokeFireball");
		FLMG A 0 A_StopSound(CHAN_WEAPON);
		Goto DryFire;
	

		
	SmokeFireball:	
	    NULL A 0 A_playSound("weapons/firegrenade");
		TNT1 A 0 a_alertmonstersDX();
        FLMT D 1 A_FireCustomMissile("SmokeSpewer", 0, 0, 0, -6);
		"####" A 0 A_WeaponOffset(random(-1,1),32+random(0,1) );
		FLMG A 0 A_SetPitch(-4.0 + pitch, SPF_INTERPOLATE);
		FLMG A 0 A_TakeAmmo("FlamerAmmo", 5);
		TNT1 AAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9));
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9));
		FLMG A 0 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0);
        FLMT DE 1;
        FLMT AB 1 A_SetPitch(+2.0 + pitch, SPF_INTERPOLATE);
		//"####" A 0 A_WeaponOffset(0,32)
		FLMT CABC 1;
		Goto Ready;
		
	Reload:	
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("Reloading", 1);
		TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,4);
		TNT1 A 0 A_JumpIfInventory("FlamerAmmo", 60, "Ready");
		TNT1 A 0 A_JumpIfInventory("AmmoRocket", 1, 2);
		Goto Ready;
		TNT1 AA 0;
		TNT1 A 0 A_Startsound("FLMRUNLD");
		FLMT KOPQRSS 1;
		"####" A 0 A_DiscardMag("FlamerAmmo",0);
		TNT1 A 0 A_fireprojectile("emptyflamercan",3,false,30,-10,0,-30);
		FLMT TZZTSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 1;
		TNT1 A 0 A_Reload("FlamerAmmo",60,"AmmoRocket",0,10,"null",TRUE);
		TNT1 A 0 A_Startsound("FLMRLOAD");
		FLMT TZZTSSSSSSSSSTUVWXYK 1;
		Goto Ready;
		
	}
}





class NewIncineratorFlame : Actor // Incinerator Flame 
{
	Default
	{
		Damagefunction 10;
		Speed 40;
		Radius 8;
		Height 8;
		
		Projectile;
		+FORCERADIUSDMG;
		RenderStyle "Add";
		Damagetype "fire";
		//+rollsprite;
		Decal "FlamethrowerScorchNEO";
		+bounceonfloors;
		+bounceonceilings;
		bouncecount 2;
		+FORCEXYBILLBOARD
	}

	States
	{
	Spawn:
		TNT1 A 0 BRIGHT;
		TNT1 A 0
		{
			Double scalefactor = frandom(0.2,0.3);
			A_setscale(scalefactor,scalefactor);
		}
		FIR3 AB 1 BRIGHT;
		TNT1 A 0
		{
			Double scalefactor = frandom(0.78,1.0);
			A_setscale(scalefactor,scalefactor);
		}
		FIR3 ABABABABCDCDCDEFGHIJKLMNOP 1 BRIGHT;
		Stop;
		
	Death:
		TNT1 A 0
		{
			Double scalefactor = frandom(0.78,1.0);
			A_setscale(scalefactor,scalefactor);
		}
		TNT1 A 0 A_Explode(10, 128, 1, 0, 1);
		FIR3 BCDEFGHIJKLMNOP 1 BRIGHT;
		Stop;
	}
	
	Override int SpecialMissileHit(Actor victim) 
		{
			If(victim && target && victim != target && !(victim is "baseheadshot") && victim.bshootable)
			{
				If(!Victim.findinventory("firetic"))
				{
					Victim.giveinventory("firetic",1);
				}
				Actor Flameactor = Victim.Findinventory("Firetic");
				If(Flameactor)
				{
					let flamer = Firetic(flameactor);
					if(flamer)
					{
						flamer.flamecauser = target;
						if(flamer.duration < 90)
						flamer.duration = 90;
						If(flamer.duration < 500)
						flamer.duration += 20;
					}
				
				}
				
			}
		
			Return -1;
		}
}

Class Firetic : Inventory {
	
	
	float duration; 
	actor flamecauser;
	Default {
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		inventory.maxamount 1;
	}
	

	

	//Items that don't spawn in the world don't need their Tick. Emptying it will actually help performace:
	Override void Tick() {}
	
	//This function is executed every tic by items while they're in an actor's inventory:
	Override void DoEffect() {
		super.DoEffect();
		//console.printf("%i",duration);
		if (owner.isFrozen())
			return;
		if (level.time % 10 == 0) 
		{
			owner.damagemobj(flamecauser,flamecauser,7,"Fire");
			If(owner)
			owner.A_Explode(3, 200, XF_HURTSOURCE, 0, 1,DAMAGETYPE:"FIRE");
		}
		if (owner && owner.health <= 0) {		
			DepleteOrDestroy();
			return;
		}
		else if(owner)
		{
		
		
			int rad = owner.radius*0.5; //we'll use the monster's radius as a base value for horizontal offset randomization
			If (random(1,5) == 5)
			{
			
			
			owner.A_SpawnItemEx(
				"flametrailstic2",
							xofs:(frandom(-rad,rad)),
				yofs:(frandom(-rad,rad)),
				zofs:(frandom(0,owner.height)),xvel:frandom(-2,2),yvel:frandom(-2,2),zvel:frandom(0.5,3)
				);
			}
			Else
			{
				owner.A_SpawnItemEx(
				"flametrailstic",
							xofs:(frandom(-rad,rad)),
				yofs:(frandom(-rad,rad)),
				zofs:(frandom(0,owner.height)),xvel:frandom(-2,2),yvel:frandom(-2,2),zvel:frandom(0.5,3)
				);
			}
		}
		
			if (duration > 0)
				duration--;
			else {
				DepleteOrDestroy();
				return;
			}
		

		


		
	}
}
