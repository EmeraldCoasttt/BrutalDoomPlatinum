	
CLASS Railgun : Brutalweapon
{
	Default
	
	{
	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "AmmoCell";
	Weapon.AmmoType2 "RailgunAmmo";
	Obituary "%o was pierced by %k's Railgun.";
    Inventory.PickupSound "RAILINSR";
	Inventory.Pickupmessage "You got the Railgun! (Slot 6)";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOALERT;
	+WEAPON.EXPLOSIVE;
	damagetype "Railgun";
	Weapon.SelectionOrder 1550;
	Inventory.AltHUDIcon "SRCGA0";
	BrutalWeapon.weight 7;


	}
	int reloadchannel;
	
	Action void a_spawnhologram()
	{
		A_radiusgive("KillHologram",10000,RGF_MONSTERS | RGF_NOSIGHT,1,"HoloPlayer");
		FLineTraceData lasersight;
				LineTrace(angle, 4096, pitch, TRF_SOLIDACTORS|TRF_THRUHITSCAN, offsetz: player.viewz - pos.z, data: lasersight);
				vector3 targetpos = lasersight.HitLocation;
				if (lasersight.HitLine)
				{
					vector2 wallnormal = (-lasersight.HitLine.delta.y,lasersight.HitLine.delta.x).unit();
					if (!lasersight.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 18);
				}
				if (lasersight.hittype == trace_hitceiling)
				{
					targetpos.z -= 13;
				}
				Let HoloTarget = Spawn("Holotarget",targetpos);
				Let HoloPlayer = Spawn("Holoplayer",pos);
				If(HoloTarget && HoloPlayer)
				{
					HoloPlayer.angle = angle;
					HoloPlayer.Tracer = Holotarget;
					HoloPlayer.Translation = Invoker.owner.Translation;
				}
				
		
	}
	
	Action void a_firenurailgun()
	{
		FLineTraceData railspawn;
				LineTrace(angle, 4096, pitch, TRF_NOSKY | TRF_THRUACTORS, player.viewz - pos.z, data: railspawn);
				if (railspawn.HitType != TRACE_HitNone)
				{
				vector3 targetpos = railspawn.HitLocation;
			if (railspawn.HitLine)
				{
					vector2 wallnormal = (-railspawn.HitLine.delta.y,railspawn.HitLine.delta.x).unit();
					if (!railspawn.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 3);
				}
					actor beam = Spawn("railgunrail", targetpos);
          
					if (beam)
					{
						beam.angle = angle;
						beam.pitch = pitch;
					}
				}
				If(!findinventory("PowerSPeed2"))
				{
				A_giveinventory("railchambered",1);
				}
				A_Fireprojectile("RailgunProjectile", 0, 0, 0, 0);
				A_alertmonsters(500);
				A_RailAttack(300, 0, 0, "Blue", "Blue", RGF_FULLBRIGHT, 1, "RailgunPuff2",0,0,0,0,1.2,2,"BluePlasmaParticleWeaponRailgun",0,360);
				//A_RailAttack(400, 0, 0, "Orange", "Red", RGF_FULLBRIGHT, 1, "RailgunPuff2",0,0,0,0,0.5,2,"none",0,270);
				A_Fireprojectile ("PlasmaSmoke", 0, 0, 0, 2);
				A_StartSound("RAILF01", 1);
				A_takeAmmo("railgunammo",1);
				A_setpitch(pitch - 6);
	
	}
	States
	{
	
		GrenadeThrowFlash:
			RAIS ABCD 1;
			TNT1 A 24;
			RAIS DCBA 1;//32 in total
			stop;
			
		FuckYouFlash:
			RAIK ABCDEEEEEEEEEEEEEEEEEEEEEEDCBA 1; //18
			stop;
			
		KickingFlash:
			RAIK ABCDEEEEEEEEEEDCBA 1;
			Goto Ready;
		AirKickingFlash:
			RAIK ABCDEEEEEEEEEEDCBA 1; //18
			Goto Ready;
	
		SlideKickingStart:
			RAIK ABCDE 1;
			RAIK EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1 { //39 total
				if (CountInv("Kicking") == 0) {
					return resolvestate("SlideKickingEnd");
				}
				return resolvestate(null);
			}
			Goto Ready;

		SlideKickingEnd:
			RAIK EEEEEEDCBA 1; //10
			Goto Ready;
			
		SprintOverlay:
			RAIK ABCDE 1;
			Wait;
	
		ReturnfromSprint:
			RAIK DCBA 1;
			Goto ready;
	
		Select:
			TNT1 A 0;
			NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			Goto SelectFirstPersonLegs;
		SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1); 
			UNHG A 0 A_takeinventory("disabletilting",1);
			TNT1 AAAAAAAAAAAAAA 0 A_Raise();
			TNT1 A 1 A_Raise();
			TNT1 A 0 A_Giveinventory("RailgunSelected",1);
		ReturnFromNothing:
			TNT1 A 0 A_startSound("RAILINSR",1);
			TNT1 AAA 0;
		
			Goto SelectAnimation;
		
		SelectAnimation:
			NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			RAIS DCBA 1 A_WeaponReady(WRF_NOFIRE);
			GOto Ready;
			Deselect: 
				"####" A 0 A_TakeInventory("IsPlayingDoxMod",1);
				"####" A 0 A_ClearOverlays(-2,-2);
				RAIS ABCD 1;
				TNT1 A 0 A_StopSOund(1);
				TNT1 A 0 A_StopSOund(2);
				TNT1 A 0 A_StopSOund(6);
				TNT1 A 0 A_TakeInventory("TossGrenade", 1);
				TNT1 AAAAAAAAAAAAAAAA 0 A_lower();
				TNT1 A 1 A_Lower();
				Wait;
		Ready:
			TNT1 A 0 A_jumpifinventory("railchambered",1,"Pumping");
			RAIL A 1 A_weaponreadyDX(WRF_ALLOWRELOAD);
			LOOP;

		Fidget:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_PlaySound("RAILMAG2", 5);
			RAIL PR 1 A_WeaponReadyDX();
			RAIL TWWVUUUUUUUUU/*UUUUUUUUUU*/ 1 A_WeaponReadyDX();
			TNT1 A 0 A_PlaySound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1 A_WeaponReadyDX();
			Goto ready;

		Fire:
			TNT1 A 0 A_jumpifinventory("railchambered",1,"Pumping");
			TNT1 A 0 A_CheckIfAmmo("railgunammo");
			TNT1 AAAAAAAAAA 0 A_Fireprojectile ("BluePlasmaParticleWeapon", random(-60,60), 0, -1, -3, 0, random(-6,70));
			RAIL A 0 
			{
				A_overlay(-5,"DoNothing");
				A_firenurailgun();
				A_zoomfactor(0.7);
			}
			RAIF A 1;
			TNT1 A 0 A_zoomfactor(1.0);
			RAIF BCDEFG 1 A_setpitch(pitch + 1);
			
			RAIL BCDEBCDEBCDEBCDE 1 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB);
			TNT1 A 0 A_jumpifinventory("PowerSPeed2",1,"Ready");
		Pumping:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1;
			TNT1 A 0 A_PlaySound("RAILMAG2", 5);
			RAIL PR 1;
			TNT1 A 0 
			{
				If(countinv("railchambered") > 0)
				{
					a_giveinventory("railsteam",1);
					a_takeinventory("railchambered",1);
					A_startsound("Railgun/Eject",2);
					A_FireProjectile("RailCaseSpawn",0,0,0,0,0,0);
				}
			}
			RAIL TWWVUUUUUUUUUUUUUUU 1
			{
				If(countinv("railsteam") > 0)
				{
					A_fireprojectile("Smallgunbarrelsmoke",frandom(-35,-45),0,0,0,0,frandom(-20,-30));
				}
			}
			TNT1 A 0 
			{
				takeinventory("railsteam",1);
				If(countinv("railgunammo") < 1 && countinv("AmmoCell") > 9)
				{
						Return resolvestate("ReloadFromPump");
				}
				Else If(countinv("railgunammo") < getCVAR("bd_RailgunMag") && countinv("AmmoCell") > 9 && A_pressedreload())
				{
						takeinventory("reloading",1);
						Return resolvestate("ReloadFromPump");
				}
				Else Return resolvestate("finishpump2");
			}
		FinishPump:
			RAIL WWVV 1;
		FinishPump2:
		TNT1 A 0 A_PlaySound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1;
			Goto ready;
		ReloadFromPump:
			TNT1 A 0 
			{
			takeinventory("reloading",1);
			A_overlay(-5,"ReloadingHand1");
			}
			RAIL X 4;
		ReloadFromPumpInsertShells:
			TNT1 A 0 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB);
			TNT1 A 0 A_overlay(-5,"ReloadingHand2");
			RAIL X 7 A_CheckFire();
			RAIR ABBA 1 A_CheckFire();
			RAIL X 4 A_CheckFire();
			TNT1 A 0
			{
				takeinventory("ammocell",10);
				giveinventory("railgunammo",1);
				If(countinv("railgunammo") < getCVAR("bd_RailgunMag") && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("ReloadFromPumpInsertShells");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			TNT1 A 0 A_overlay(-5,"ReloadingHand3");
			RAIL X 4;
			Goto FinishPump;
		
		
		Reload:
			TNT1 A 0
			{
				Takeinventory("reloading",1);
				If(countinv("railgunammo") < 1 && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("Pumping");
					}
				Else if (countinv("railgunammo") < getCVAR("bd_RailgunMag") && Countinv("AmmoCell") > 9)
					{
						Return resolvestate(null);
					}
				Else
					{
						Return resolvestate("Fidget");
					}
			}
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHIJKLMNYYOO 1;
		ReloadInsertShells:
			TNT1 A 0 A_WeaponReady(WRF_NOFIRE| WRF_NOBOB);
			TNT1 A 0 A_CheckFire();
			TNT1 A 0 A_overlay(-5,"ReloadingHand2");
			RAIL O 7 A_CheckFire();
			RAIR CDDC 1 A_CheckFire();
			RAIL O 4 A_CheckFire();
			TNT1 A 0
			{
				takeinventory("ammocell",10);
				giveinventory("railgunammo",1);
				If(countinv("railgunammo") < getCVAR("bd_RailgunMag") && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("ReloadInsertShells");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			RAIL OOOOONMLKJ 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1;
			Goto ready;
			
		NoAmmo:
			TNT1 A 0
			{
				If(countinv("railgunammo") < 1 && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("Pumping");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			TNT1 A 0
			{
				A_startsound("RAILDRY",1);
				A_startsound("weapons/empty",4);
			}
			RAIL BCDEBCDEBCDEBCDE 1;
			Goto ready;
			
		AltFire:
	//	RLNG A 0 ACS_NamedExecuteAlways("HoldAim");
		//RLNG A 0 A_JumpIfInventory("Zoomed",1,"NoAim");
		//RLNG A 0 A_Giveinventory("Zoomed",1)
        RLNG A 0 
		{
			A_overlay(-5,"DoNothing");
			A_ZoomFactor(3.0);
		}
		RAIZ ABCD 1;
		RLNG A 0 A_SetCrosshair(41);
		SMGG A 0 A_PlaySound("ADSIN");
		RAIZ EF 1;
	AltFireContinue:
		
		StillAiming:
		//TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
		TNT1 A 0 A_WeaponZoom();
		Goto Aim2;
		Aim1:
			TNT1 A 0 
			{
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
			}
			SMGG A 0 A_ZoomFactor(3.0);
			SNIP C 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
			Goto noaim;
		Aim2:
			TNT1 A 0 
			{
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
			}
			//SMGG A 0 A_ZoomFactor(3.0);
			SNIP C 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"GoingToAim3");
			LOOP;
	GoingToAim3:
	TNT1 A 0 A_ZoomFactor(9.0);
	SNIP C 5 BRIGHT;
	Aim3:
			TNT1 A 0 
			{
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
				//a_startsound("bepbep",2);
			}
			SMGG A 0 A_ZoomFactor(9.0);
			SNIP C 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"NoAim");
			LOOP;
	ZoomedFire:
		TNT1 A 0 A_CheckIfAmmo("railgunammo",1,"NoAmmoZoomed");
		TNT1 A 0 A_firenurailgun();
		SNIP C 2 BRIGHT;
		SNIP CCCCCC 1 BRIGHT A_setpitch(pitch + 1);
		SNIP C 18 BRIGHT;
		TNT1 A 0 A_jumpifinventory("PowerSPeed2",1,"StillAiming");
			SNIP CCCC 1 BRIGHT A_weaponZoom3();
			
			TNT1 A 0 A_PlaySound("RAILMAG2", 5);
			SNIP CC 1 BRIGHT;
			TNT1 A 0 
			{
				If(countinv("railchambered") > 0)
				{
					a_giveinventory("railsteam",1);
					a_takeinventory("railchambered",1);
					A_startsound("Railgun/Eject",2);
					A_FireProjectile("RailCaseSpawn",0,0,0,0,0,0);
				}
			}
			SNIP CCCCCCCCCCCCCCCCCCC 1 BRIGHT
			{
				If(countinv("railsteam") > 0)
				{
					A_fireprojectile("Smallgunbarrelsmoke",frandom(-35,-45),0,0,0,0,frandom(-20,-30));
				}
				A_weaponZoom3();
			}
			TNT1 A 0 a_takeinventory("railsteam",1);
			//TNT1 A 0 A_WeaponZoom2();
			SNIP CCCC 1 BRIGHT A_WeaponZoom3();

		TNT1 A 0 A_PlaySound("RAILINSR", 5);
			SNIP CCCCCCCCCC 1 BRIGHT;
		TNT1 A 0
			{
				If(countinv("railgunammo") < 1 && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("NoAmmoZoomed2");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
		TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
		
		/*
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_PlaySound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;
		Goto Pumping;
		*/
	NoAmmoZoomed:
			TNT1 A 0
			{
				If(countinv("railgunammo") < 1 && Countinv("AmmoCell") > 9)
					{
						Return resolvestate("NoAmmoZoomed2");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			TNT1 A 0
			{
				A_startsound("RAILDRY",1);
				A_startsound("weapons/empty",4);
			}
			SNIP CCCCCCCCCCCCCCCC 1 BRIGHT;
			TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
	Noammozoomed2:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_PlaySound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;	
        Goto Pumping;
		
	ZoomedReload:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_PlaySound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;	
        Goto Reload;
		
	NoAim:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_PlaySound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;	
        Goto Ready;
		
		
		Pumpinghandlol:
		TNT1 A 0 A_PlaySound("foley/ShotgunReloadRaise", 6);
			RAIH ABCD 1;
			STOP;
		Pumpinghandlol2:
			RAIH IHFE 1;
			STOP;
		Pumpinghandlolreverse:
		TNT1 A 0 A_PlaySound("foley/ShotgunReloadLower", 6);
			RAIH DCBA 1;
			STOP;
		Pumpinghandlol2reverse:
			RAIH FHI 1;
			STOP;
		ReloadingHand1:
			RAIH JKLM 1;
			Stop;
		ReloadingHand3:
			RAIH MLKJ 1;
			STOP;
		ReloadingHand2:
			TNT1 A 5;
			TNT1 A 0 
			{
				If(invoker.reloadchannel >= 24)
				{
					invoker.Reloadchannel = 19;
				}
				If(invoker.reloadchannel < 19)
				{
					invoker.Reloadchannel = 19;
				}
				invoker.Reloadchannel = invoker.reloadchannel + 1;
				A_startsound("Railgun/Insert",invoker.reloadchannel);
			}
			RAIH RQPONN 1;
			RAIH STUV 1;
			STOP;
			
		DualWield:
			TNT1 A 0 A_takeinventory("startdualwield",1);
			RAIL A 4;
			TNT1 A 0 A_jumpifinventory("holdingdual",1,"SlowHologram");
			TNT1 A 0
			{
				A_startsound("bepbep",4);
				A_SpawnHologram();
			}
			Goto Ready;
		SlowHologram:
			TNT1 A 0 A_startsound("PISTFOL5",10);
			RAIZ ABCD 1;
			TNT1 A 0 
			{
			A_startsound("BEP",4);
			A_setcrosshair(41);
			}
		HoldHologram:
			RAIZ D 1
			{
				FLineTraceData lasersight;
				LineTrace(angle, 4096, pitch, TRF_SOLIDACTORS|TRF_THRUHITSCAN, offsetz: player.viewz - pos.z, data: lasersight);
				vector3 targetpos = lasersight.HitLocation;
				if (lasersight.HitLine)
				{
					vector2 wallnormal = (-lasersight.HitLine.delta.y,lasersight.HitLine.delta.x).unit();
					if (!lasersight.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 18);
				}
				if (lasersight.hittype == trace_hitceiling)
				{
					targetpos.z -= 13;
				}
				
				if (lasersight.hittype == trace_hitfloor)
				{
					targetpos.z += 13;
				}
				Spawn("HoloLaser",targetpos);
			
			}
			TNT1 A 0 A_jumpifinventory("holdingdual",1,"HoldHologram");
			TNT1 A 0
			{
				A_startsound("bepbep",4);
				A_SpawnHologram();
				A_startsound("PISTFOL5",10);
				{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			}
			RAIZ DCBA 1;
			TNT1 A 0 A_takeinventory("startdualwield",1);
			Goto Ready;
			
		Spawn:
			SRCG A 1;
			LOOP;

		Unload:
			RAIL A 1 A_WeaponReady();
			RAIL A 0 A_ZoomFactor(1.0);
			RAIL A 0 A_Takeinventory("Unloading",1);
			RAIL A 0 A_Takeinventory("ADSmode",1);
			RAIL A 0 A_Takeinventory("Zoomed",1);
			RAIL A 0 A_JumpIfInventory("RailgunAmmo",1,1);
			Goto Ready;
		RemoveBullets:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1;
			RAIL A 0 A_JumpIfInventory("RailgunAmmo",1,1);
			Goto FinishUnload;
			TNT1 A 0 A_PlaySound("RAILMAG2", 5);
			RAIL PR 1;
			RAIL TWWV 1;
			RAIL A 0 A_Takeinventory("RailgunAmmo",1);
			RAIL A 0 A_Giveinventory("AmmoCell",10);
			RAIL UUUUUUUUU/*UUUUUUUUUU*/ 1;
			TNT1 A 0 A_PlaySound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1;
			Goto RemoveBullets+19;
		FinishUnload:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1;
			Goto Ready;
	}
	
}

CLASS RailgunRail : Actor
	{
	Default
		{
		Radius 1; 
		Height 1;
		+nogravity;
		+noclip;
		}
	States
		{
			Spawn:
				TNT1 AAA 0 A_SpawnItemEX("WhiteShockwave");

		TNT1 AAAA 0 A_spawnprojectile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (-10, -80));
		RAIL A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		RAIL A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		//RAIL A 0 A_spawnprojectile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAAA 0 A_spawnprojectile ("ExplosionParticleVeryFast", 0, 0, random (0, 360), 2, random (0, 360));
		 TNT1 AAAAAAAA 0 A_spawnprojectile ("ExplosionParticleHeavy", 5, 0, random (0, 360), 2, random (0, -180));
        TNT1 AAAAAAAAAA 0 A_spawnprojectile ("ExplosionParticleHeavy", 5, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAAAA 0 A_spawnprojectile ("ExplosionParticleVeryFast", 5, 0, random (0, 360), 2, random (0, 360));
				MODL A 1 BRIGHT
				{
					Radius_Quake(3, 8, 0, 15, 0);
					A_startsound("BONECRACK",1);
					A_startsound("RICMET",2);
					A_spraydecal("RailLightning",36);
					Actor Core = spawn("railgunrail2",pos);
					core.angle = angle;
					core.pitch = pitch;
				}
				MODL A 35 BRIGHT
				{
					
				}
			TimeToFade:
				MODL A 1 BRIGHT
				{
					A_fadeout(0.01);
				}
				LOOP;
		}
	}

		CLASS RailgunRail2 : Actor
	{
	Default
		{
		Radius 1; 
		Height 1;
		+nogravity;
		+noclip;
		}
	States
		{
			Spawn:

				MODL A 225 NODELAY;
			Death:
				TNT1 AAAAAAAA 0
				{
				A_startsound("BONECRACK",1);
				//A_SpawnProjectile("NailgunGib1", random(-1,1), random(1,-1), random(135,225), 2, random (-50, 50));
				A_spawnitemex("Nailgungib1",frandom(-1,1),frandom(-3,-20),frandom(-1,1),frandom(-7,-3),frandom(-1,1),frandom(-10,10));
				A_spawnitemex("Nailgungib2",frandom(-1,1),frandom(-3,-20),frandom(-1,1),frandom(-7,-3),frandom(-1,1),frandom(-10,10));
				A_spawnitemex("Nailgungib3",frandom(-1,1),frandom(-3,-20),frandom(-1,1),frandom(-7,-3),frandom(-1,1),frandom(-10,10));
				//A_SpawnProjectile("NailgunGib2", random(-1,1), random(1,-1), random(135,225), 2, random (-50, 50));
				//A_SpawnProjectile("NailgunGib3", random(-1,1), random(1,-1), random(135,225), 2, random (-50, 50));
				}
				Stop;
				
		}
	}
	
CLASS HoloLaser: FastProjectile
{ 
	Default
	{
		Decal "None";
		Mass 0;
		Scale 0.2;
		Radius 1;
		Height 2;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+BLOODLESSIMPACT;
		+ALWAYSPUFF;
		+PUFFONACTORS;
		+DONTSPLASH;
		+FORCEXYBILLBOARD;
		Renderstyle "Add";
		Alpha 0.8;
	}
    States
    {
	Spawn:
		LEYS RR 0;
		LEYS B 1 BRIGHT;
		Stop;
	}
}

CLASS HoloTarget: FastProjectile
{ 
	Default
	{
		Decal "None";
		Mass 0;
		Scale 0.2;
		Radius 1;
		Height 2;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+BLOODLESSIMPACT;
		+ALWAYSPUFF;
		+PUFFONACTORS;
		+DONTSPLASH;
		+FORCEXYBILLBOARD;
		Renderstyle "Add";
		Alpha 0.8;
	}
	Int HoloTimer;
	Override void tick()
	{
		Holotimer++;
		If ( holotimer >= 1000 )
		{
			Destroy();
		}
		Super.tick();
	}
    States
    {
	Spawn:
		TNT1 A 1;
		LOOP;
	}
}

CLASS HoloPlayer : BDPNotMonster
{
	Default
	{
		Monster;
		-Solid;
		+notrigger;
		+noblockmonst;
		-Countkill;
		+NOBLOODDECALS;
		+BRIGHT;
		Renderstyle "Translucent";
		Alpha 0.75;
		Radius 16;
		Height 42;
		Health 200;
		Maxstepheight 666;
		Mass 99999;
		
		BloodType "HoloBlood";
	
	}
	
	Override void tick()
	{
		If ( !tracer || findinventory("KillHologram") )
		{
			A_fadeout(0.05);
		}
		Super.tick();
	}
	Action void A_HoloGramAlert()
	{
		BlockThingsIterator CheckFortracers = BlockThingsIterator.create(Self,1000); //256 can be whatever range around the actor.
		Actor CurrentActor;
		While (CheckFortracers.Next())
		{
			CurrentActor = CheckFortracers.Thing;
						
			//If the actor is a monster, has none of the specified item, the caller has a line of sight to the actor, and the actor is within 512 MU, then jump to the see state.
			//Itemname obviously has to be whatever item you want the actor to check that the possible target has none of, and the 512 map unit sight range can be changed to anything else.
			If (CurrentActor && CurrentActor.bismonster && currentactor.health > 0 && !currentactor.bfriendly && CheckSight(CurrentActor,SF_IGNOREWATERBOUNDARY) && currentactor.target && currentactor.target is "playerpawn" && !currentactor.findinventory("PissedArmor"))
			{
				Currentactor.target = self;
			}
			
		}
		
		A_alertmonsters(0,AMF_TARGETEMITTER);
		
	}
	
	States
    {
	Spawn:
		MARN AAABBBCCCBBB 1
		{
			A_facetracer();
			vector3 movepos = Vec3Angle(6,angle,0);
			If (checkmove(Vec2Angle(6,angle),PCM_NOACTORS))
			{
				setorigin(movepos,TRUE);
			}
			A_hologramAlert();
			If(tracer && distance2d(tracer) <= 32)
			{
				Return resolvestate("Spawn2");
			}
			
			Return resolvestate(null);
		}
		LOOP;
	Spawn2:
		TNT1 A 0 A_jump(25,"Twerk","TeaBag","Moves1","Moves2","Moves3");
		TNT1 A 0 A_jump(255,"Wave1","Wave2","Observe","Medkit");
	Wave1:
		MWAV IJK 1;
	Wave1Continue:
		MWAV LMNNML 3 A_hologramAlert();
		LOOP;
	Wave2:
		MWAV ABCD 3;
	Wave2Continue:
		MWAV EEEEEEEFFFFFFF 1 A_HoloGramAlert();
		LOOP;
	Observe:
		MR7S AAAAABBBBBACCCCCABBBBBAA 4 A_hologramalert();
		LOOP;
	MedKit:
		MR8S AAAAAAABBBBBBB 2 A_HoloGramAlert();
		LOOP;
	TeaBag:
		MARN AA 2 A_hologramalert();
		PLYC AA 2 A_hologramalert();
		LOOP;
	Twerk:
		TWRK CBA 2 A_hologramAlert();
		LOOP;
	Moves1:
		2AKE ABCDEFGHIJKLMOPQR 4 A_hologramAlert();
		LOOP;
	Moves2:
		3AKE ABCDEFGHIJKLMNO 4 A_hologramAlert();
		LOOP;
	Moves3:
		JAKE ABCDEFGHIJKLMNOP 4 A_hologramAlert();
		LOOP;
		
	Death:
		PLAY O 5;
		PLAY P 5 A_XScream();
		PLAY Q 5;
		PLAY RSTUV 5;
	
	Death2:
		PLAY W 1 A_fadeout(0.05);
		LOOP;
		
	}

}


CLASS HoloBlood : Actor
{
	Default
	{
		+nogravity;
		+noblockmap;
	
	}
	
	States
	{
		Spawn:
			TNT1 AAA 0 NODELAY
			{
				A_spawnitemex("blueplasmaparticle",0,0,0,frandom(-5,5),frandom(-5,5),frandom(1,5));
				A_startsound("StickyGrenade/hit");
			}
			STOP;
	}
}
	
