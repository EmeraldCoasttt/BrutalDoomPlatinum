CLASS SSG : BrutalWeapon
{
	Default
	{
		Weapon.Kickback 50;
		Weapon.SelectionOrder 400;
		Weapon.AmmoGive1 8;
		Weapon.AmmoGive2 0;
		Weapon.AmmoType1 "AmmoShell";
		Weapon.AmmoType2 "SSGAmmo";
		Weapon.AmmoUse1 0;
		Weapon.AmmoUse2 0;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOAUTOFIRE;
		+FORCEXYBILLBOARD;
		Inventory.PickupMessage "You got the Super Shotgun! (Slot 3)";
		Obituary "$OB_MPSSHOTGUN";
		Inventory.PickupSound "CLIPINSS";
		Scale 0.8;
		Radius 24;
		Height 24;
		Tag "Super Shotgun";
		Inventory.AltHUDIcon "SGN2A0";
		BrutalWeapon.weight 1;
	}
	Float theoverlayalpha; //Keeping track of fade-in
	
	//Cleaner way to call for overlays
	Action void a_hookoverlay(statelabel overlayname)
	{
		A_overlay(9,overlayname);
		A_hookflags(FALSE);
	
	}
	
	//Sets the transparency for the meathook layer. Bool determines whether to fade in the meathook when available
	Action void a_hookflags(bool hookfadein = false)
	{
		A_overlayflags(9,PSPF_ALPHA | PSPF_RENDERSTYLE,TRUE);
	A_OverlayRenderstyle(9,STYLE_Translucent);
	//Is the meathook currently attached to a monster or deselected?
	If(invoker.owner.countinv("meathook") < 1 || invoker.owner.countinv("meathookextended") < 1)
		{
			A_overlayAlpha(9,0.0);
			invoker.theoverlayalpha = 0;
			if(invoker.owner.findinventory("BDPBlur"))
			{
				A_overlay(9,"donothing");
			}
		}
	//If meathook is available, fade them in
	Else if(hookfadein)
		{
			Invoker.theoverlayalpha = (invoker.theoverlayalpha + 0.10);
			A_overlayAlpha(9,invoker.theoverlayalpha);
		}
	
	}
	
	
	
	
	
	States
	{
	//Handles fading in and maintaining hook status
	HookFlags:
		TNT1 A 1 A_hookflags(TRUE);
		LOOP;
	GrenadeThrowFlash:
	TNT1 A 0 A_HookOverlay("GrenadeHook");
	SHT5 BCDE 1;
	TNT1 A 24;
	SHT5 EDCB 1;//32 in total
	stop;
	
	GrenadeHook:
		MHT5 BCDE 1;
	TNT1 A 24;
	MHT5 EDCB 1;//32 in total
	stop;
	
	KickingFlash:
	TNT1 A 0 A_HookOverlay("KickingFlashHook");
	SHTZ CDEFGH 1;
	SHTZ I 4;
	SHTZ HGFEDC 1;
	Goto Ready;
	
	KickingFlashHook:
	MHTZ CDEFGH 1;
	MHTZ I 4;
	MHTZ HGFEDC 1;
	Stop;
	
	
	
	
	AirKickingFlash:
	TNT1 A 0 A_HookOverlay("AirKickingFlashHook");
	    SH69 PQRSTTTTTTTTTTSRQP 1; //18
	    Goto Ready;
	AirKickingFlashHook:
		MH69 PQRSTTTTTTTTTTSRQP 1;
		STOP;
		
	 SlideKickingStart:
	 TNT1 A 0 A_HookOverlay("SlideKickingHook");
	    SH69 PQRST 1;
	    SH69 TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT 1 { //39 total
			if (CountInv("Kicking") == 0) {
				return resolvestate("SlideKickingEnd");
			}
			return resolvestate(Null);
		}
		Goto Ready;
	SlideKickingHook:
	 MH69 PQRST 1;
	    MH69 TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT 1;
		STOP;
	
	
	 SlideKickingEnd:
	 TNT1 A 0 A_HookOverlay("SlideKickingHook2");
	    SH69 TTTTTTSRQP 1; //10
	   Goto Ready;
	   
	   SlideKickingHook2:
	   MH69 TTTTTTSRQP 1;
	   STOP;
		
	FuckYouFlash:
	 TNT1 A 0 A_HookOverlay("FuckYOuHook");
	SH69 PQRSTTTTTTTTTTTTTTTTTTTTTTSRQP 1;//28 total
	stop;
	
	FuckYouHook:
	MH69 PQRSTTTTTTTTTTTTTTTTTTTTTTSRQP 1;//28 total
	stop;
	
    SelectAnimation:    
	Ready:
	Ready3:
		TNT1 A 0 A_HookOverlay("ReadyHook");
	    SHTZ A 1 A_WeaponReadyDX(WRF_ALLOWRELOAD);
		Loop;
	
	
	ReadyHook:
		MHTZ A 1;
		STOP;
	
	Fidget:
		TNT1 A 0 A_HookOverlay("FidgetHook");
	    SHO3 ABCD 1 A_WeaponReadyDX();
		SHO3 E 3 A_WeaponReadyDX();
		SHO3 FGHI 1 A_WeaponReadyDX();
		TNT1 A 0 A_startsound("weapons/sshoto");
		SHO3 JKL 1 A_WeaponReadyDX();
		SHO3 M 16 A_WeaponReadyDX();
		SHTZ A 0 A_startsound("foley/SSGraiseAfterClose",10);
		SHO3 NOP 1 A_WeaponReadyDX();
		SHTZ A 0 A_startsound("weapons/sshotc");
		SHO3 QRS 1 A_WeaponReadyDX();
		SHTZ A 0 A_TakeInventory("Reloading",1);
		Goto Ready;
	FidgetHook:
		MHO3 ABCD 1; 
		MHO3 E 3;
		MHO3 FGHI 1; 
		MHO3 JKL 1; 
		MHO3 M 16; 
		MHO3 NOP 1; 
		MHO3 QRS 1;
		
		Stop;
		
	SprintOverlay:
		TNT1 A 0 A_HookOverlay("SprintHook");
		 SH69 PQRS 1;
		KeepSprinting:
		SH69 T 1 A_WeaponReadyDX(0,FALSE,FALSE);
		TNT1 A 0 A_KeepSprinting();
		Goto ReturnFromSprint;
	SprintHook:
		MH69 PQRS 1;
		MH69 T 1;
		Wait;
	ReturnFromSprint:
	TNT1 A 0 A_HookOverlay("SprintHook2");
		SH69 SRQP 1 A_WeaponReadyDX();
		Goto ready;
		
	SprintHook2:
		MH69 SRQP 1;
		Stop;
		
	PuristGun:
		TNT1 A 1;
		SHTZ A 0 A_GiveInventory("ClassicSSG", 1);
		SHTZ A 0 A_TakeInventory("SSG", 1);
		TNT1 A 10;
		Goto Ready;
		
	DeselectALmostInstantly:
	SH69 B 1 offset(4,37);
	SH69 B 1 offset(9,42);
	TNT1 A 2 offset(0,32);
	TNT1 A 2 A_Takeinventory("QuickSwitchSSG",1);
	TNT1 A 0 ChangeAmmoIcon1("SHELA0");
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower();
	wait;
	
	DeselectInstantly:
	TNT1 A 5 A_Takeinventory("QuickSwitchSSG2",1);
	TNT1 A 0 ChangeAmmoIcon1("SHELA0");
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower();
	wait;
	Deselect: "####" A 0 A_TakeInventory("IsPlayingDoxMod",1);
		SHTZ A 0 A_Takeinventory("Zoomed",1);
        SHTZ A 0 A_ZoomFactor(1.0);
		SHTZ A 0 A_TakeInventory("TossGrenade", 1);
		TNT1 A 0 A_JumpIfInventory("QuickSwitchSSG2",1,"DeselectInstantly");
		TNT1 A 0 A_JumpIfInventory("QuickSwitchSSG",1,"DeselectALmostInstantly");
		"####" A 0 A_ClearOverlays(-2,-2);
		TNT1 A 0 A_HookOverlay("DeselectHook");
		SHT5 ABCDE 1;
		TNT1 A 0 ChangeAmmoIcon1("SHELA0");
		TNT1 A 0 ChangeAmmoIcon2("SGN2A0");
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower();
		TNT1 A 1 A_Lower();
		Wait;
	DeselectHook:
		MHT5 ABCDE 1;
		STOP;
	Select:
		TNT1 A 0;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("SSGCrosshair"));}else{A_SetCrosshair(0);}}
		Goto SelectFirstPersonLegs;
		SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1);
		TNT1 A 0 A_TakeInventory("QuickSwitchSSG",1);
		
		TNT1 AAAAAAAAAAAAAAA 0 A_Raise();
		TNT1 A 0 A_GunSlingerReload("SSGAmmo",2,"AmmoShell",1);
		TNT1 A 0 A_Overlay(8,"hookflags");
		NULL A 0
		{
		if (CountInv("UsingDragonBreath")==1) { ChangeAmmoIcon1("SHEL[0"); }
		if (CountInv("meathookextended")==1) { ChangeAmmoIcon2("MGN2A0"); }
		}
		TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, 3);
		SHTZ A 0 A_JumpIfInventory("SSGAmmo", 1, 1);
		Goto RaiseReloading;
		TNT1 A 0;
		ReturnFromNothing:
		TNT1 A 0 A_Overlay(8,"hookflags");
		TNT1 A 0 A_HookOverlay("RaiseHook");
		TNT1 A 0 A_startsound("weapons/sshotc");
		SHT5 EDCBA 1 A_WeaponReadyDX(WRF_NOFIRE);
		SHTZ A 0 A_Giveinventory("SSGSelected",1);

		Goto Ready;
		
	RaiseHook:
		MHT5 EDCBA 1;
		Stop;
		
	RaiseReloading:
		SHTZ A 0 A_JumpIfInventory("AmmoShell", 2, 1);
		Goto RaiseNoAmmo;
		TNT1 A 0 A_HookOverlay("RaiseReloadHook");
		SHT5 EDCBA 1;
        Goto Reload;
	RaiseReloadHook:
		MHT5 EDCBA 1;
		Stop;
		
	RaiseNoAmmo:	
	TNT1 A 0 A_HookOverlay("RaiseNoAmmoHook");
	   SHT5 EDCB 1;
		SHTZ A 0 A_startsound("weapons/sshotc");
		SHT5 AA 1;
		Goto Ready;
		
	RaiseNoAmmoHook:
		MHT5 EDCBAA 1;
		Stop;

	NoAmmo:
		SHTZ A 0;
		SHTZ A 0 A_ZoomFactor(1.0);
		SHTZ A 0 A_Takeinventory("Zoomed",1);
		SHTZ A 0 A_Takeinventory("ADSmode",1);
		TNT1 A 0 A_startsound("weapons/empty", 4);
		NoAmmo2:
		
		SHTZ AAA 1 
		{
		A_HookOverlay("ReadyHook");
		A_WeaponReadyDX(WRF_ALLOWRELOAD | WRF_NOFIRE);
		}
		SHTZ A 0 A_JumpIfInventory("Reloading",1,"Reload");
		TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, "Ready3");
		SHTZ A 0 A_JumpIfInventory("AmmoShell",1,"Reload");
		SHTZ A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
		Goto Ready3;
		
		
		
		
	 FireDragonBreath:
	    FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileProperFaster", random(-2,-4), 0, 4, -8, 0, 0);
        FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileFaster", random(-2,-4), 0, 4, -8, 0, 0);
		
		FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileProperFaster", random(2,4), 0, -4, -8, 0, 0);
        FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileFaster", random(2,4), 0, -4, -8, 0, 0);
		
		Goto ContinueRecoil;
		
	 Fire:
	 
		SHTZ A 0 A_TakeInventory("Reloading",1);
		SHTZ A 0 A_JumpIfInventory("SSGAlt",1,"AltFireEvenIfMeathook");
		SHTZ A 0 A_CheckIfAmmo("SSGAmmo", 2);
		//SHTZ A 0 A_JumpIfInventory("SSGAmmo", 2, 1)
		//Goto AltFire
		TNT1 A 0 A_HookOverlay("RecoilHook");
		SHTZ A 0 A_TakeAmmo("SSGAmmo", 2);
		SHTZ A 0 A_ZoomFactor(1.6);
		SHTZ A 0 A_JumpIfInventory("PowerStrength", 1, 2);
		SHTZ A 0 
		{
		A_Recoil(3*cos(pitch));
		  if(vel.z != 0)
		  {
		  ThrustThingZ(0,pitch/2,0,1);
		  }
		else
		  {
		  ThrustThingZ(0,pitch/3,0,1);
		  }
		}
		SHTZ A 0;
		SHTZ A 0 A_PlaySound("FARSSG", 1)
		SHO9 A 0 A_firebullets (0,0,1,40,"shotpuff",FBF_NORANDOM,300);
		TNT1 A 0 a_alertmonstersDX();
		
       // SHO9 A 0 BRIGHT A_startsound("SSHFIRE", 1)
	    NULL A 0
		{
		If (CountInv("UsingDragonBreath")==1)
		    { A_startsound("weapons/SSGDragonBreath", 1); }
			else
			{ A_startsound("SSHFIRE", 1); }
		}
			
		TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 31);// For poor PCs
		TNT1 AAAAAAAAAA 0 A_fireprojectile("DecorativeTracer", random(-10,10), 0, 0, -12, 0, random(-5,5));
		TNT1 AAAAAAAAAAAA 0 BRIGHT A_fireprojectile("ShotgunParticles", random(-19,19), 0, -1, 0, 0, random(-9,9));
		TNT1 AAAAAAAA 0 BRIGHT A_fireprojectile("ShotgunParticles2", random(-19,19), 0, -1, 0, 0, random(-9,9));
		SHTZ A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27);
	    NULL A 0 A_JumpIfInventory("UsingDragonBreath",1,"FireDragonBreath");
		SHTZ A 0 A_FireBullets (10, 1, 9, 13, "ShotgunPuff", FBF_NORANDOM);
	    SHTZ A 0 A_FireBullets (6, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM);
	ContinueRecoil:
		SHOF A 1 BRIGHT A_Gunlight();
		SHTZ A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 3);//Tactical Mode deals extra damage
		SHTN A 0 A_FireBullets (11, 3, 10, 13, "ShotgunPuff2", FBF_NORANDOM);
		SHTZ A 0 A_SetPitch(pitch-20, SPF_INTERPOLATE);
		TNT1 AA 0;
		SHTZ A 0 A_SetPitch(pitch-12, SPF_INTERPOLATE);
        SHOF B 1 BRIGHT A_Gunlight();
		SHTZ A 0 A_ZoomFactor(1.00);
		//SHTZ AA 0 A_fireprojectile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		//SHTZ AA 0 A_fireprojectile("GunFireSmoke", 0, 0, -2, 0, 0, 0)
        SHTZ A 0 A_TakeInventory("SSGAlt",1);
        SHTZ A 0 A_TakeInventory("Reloading",1);
		TNT1 A 0 A_Gunlight();
		SHOF C 1 A_SetPitch(pitch+1.5, SPF_INTERPOLATE);
		TNT1 A 0 A_Gunlight();
		SHOF DDEFGHI 1 A_SetPitch(pitch+1.5, SPF_INTERPOLATE);
		
		SHTZ A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 10);//Tactical Mode takes more time
		SHTZ AAAAAAAAAA 1 A_SetPitch(pitch+0.5, SPF_INTERPOLATE);
		SHTZ A 0 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);
		SHTZ A 0 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);
		//TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, 2)//Don't go to NoAmmo unless they try to fire again
		TNT1 A 0 A_jumpifinventory("PowerSpeed2",1,"Ready");
		Goto NoAmmo2;
		TNT1 AAA 0;
		Goto Ready;
	RecoilHook:
		MHOF AB 1 BRIGHT A_hookflags();
		MHOF CDDEFGHI 1;
		MHTZ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1;
		STOP;
		
		
	ReloadSmokeRight:
	TNT1 A 1;
	SSGS AB 1 A_fireprojectile("SmokeSpawner",0,0,-5,-1);
	SSGS CDEF 1;
	stop;
	ReloadSmokeLeft:
	TNT1 A 1;
	SSGS GH 1 A_fireprojectile("SmokeSpawner",0,0,-8,-2);
	SSGS IJKL 1;
	stop;
	
	Reload:	
		SHTZ A 0;
		
		SHTZ A 0 A_TakeInventory("Reloading",1);
		
		
		SHTZ A 0 A_JumpIfInventory("SSGAlt", 1, "Reload2");//Check if still has a shell on left barrel
		
		SHTZ A 0 A_JumpIfInventory("SSGAmmo", 2, "Fidget");//Checks if the gun is already loaded
		
		
		SHTZ A 0 A_JumpIfInventory("AmmoShell", 1, 1);//Check if has any ammo left to reload
		Goto Ready;
		
		
		SHTZ A 0 A_JumpIfInventory("AmmoShell", 2, 1);//Check if has ammo to reload 2 shells
		Goto Reload2;
		TNT1 A 0 A_HookOverlay("hookreload");
		SHTZ BCDEFGH 1;
		SHTZ I 3;
		XXXX X 0 A_startsound("foley/SSGlowerBeforeOpen",10);
		SHTZ JLMNOP 1;
		SHTZ A 0 A_startsound("weapons/sshoto");
		//SHTZ A 0 A_startsound("foley/SSGopen")
	//	GLR1 AA 0 A_fireprojectile("SmokeSpawner",0,0,0,5)
    //    GLR1 AA 0 A_fireprojectile("SmokeSpawner",0,0,-2,4)
		NULL A 0 { A_Overlay(2,"ReloadSmokeLeft"); A_Overlay(3,"ReloadSmokeRight"); }
		TNT1 A 0 A_JumpIfInventory("UsingDragonBreath",1, "ReloadDragonBreath");	
		SHTZ Q 1;
		SHTZ A 0 A_JumpIfInventory("HasUnloaded", 1, 3);
		SHTZ A 0 A_startsound("foley/SSGshellEject",10,0,0.5);
		TNT1 A 0 A_fireprojectile("SSGCaseSpawner",0,0,-6, -14);
		TNT1 A 0 A_fireprojectile("SSGCaseSpawner",0,0,-4, -13);
		SHTZ RR 1;
		SHTZ S 3;
		SHTZ TUVWX 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		//SHTZ A 0 A_startsound("foley/SSGinsertShells")
		SHTZ A 0 A_TakeInventory("AmmoShell", 2);
		SHTZ A 0 A_GiveInventory("SSGAmmo", 2);
		SHTZ A 0 A_TakeInventory("SSGAlt",1);
		SHTZ A 0 A_TakeInventory("HasUnloaded",1);
		SHTZ YZ 1;
		SH69 A 1 A_GiveInventory("QuickSwitchSSG",1);//allows for super fast quick switch
		SH69 B 1 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);	
		TNT1 A 0 A_TakeInventory("QuickSwitchSSG",1);
		SH69 CL 1;
	FinishRegularReload:
		TNT1 A 0 A_HookOverlay("FinishRegularReloadHook");
		SHTZ A 0 A_startsound("foley/SSGraiseAfterClose",10);
		SH69 LD 1;
		SHTZ A 0 A_startsound("weapons/sshotc");
		SH69 EF 1;
		SH69 G 1;
		SH69 H 2;
		SH69 IJK 1 A_TakeInventory("Reloading",1);
		SHTZ A 0 A_ReFire();
		SHTZ A 1;
        Goto Ready;
	HookReload:
		MHTZ BCDEFGH 1;
		MHTZ I 3;
		MHTZ JLMNOP 1;
		MHTZ Q 1;
		MHTZ RR 1;
		MHTZ S 3;
		MHTZ TUVWX 1;
		MHTZ YZ 1;
		MH69 A 1;
		MH69 B 1;
		MH69 CL 1;
	FinishRegularReloadHook:
		MH69 LD 1;
		MH69 EF 1;
		MH69 G 1;
		MH69 H 2;
		MH69 IJK 1;
		MHTZ A 1;
		STOP;
		
	ReloadDragonBreath:		
		tnt1 a 0 A_HookOverlay("ReloadDragonBreathHook");
		SHTZ \ 1;
		SHTZ A 0 A_startsound("foley/SSGshellEject",10,0,0.5);
		SHTZ A 0 A_JumpIfInventory("HasUnloaded",1,"ReloadDragonBreath2");
		
		TNT1 A 0 A_fireprojectile("SSGDragonBreathCaseSpawner",0,0,-6, -14);
		TNT1 A 0 A_fireprojectile("SSGDragonBreathCaseSpawner",0,0,-4, -13);
		ReloadDragonBreath2:
		SHTZ RR 1;
		SHTZ S 2;
	    SSGD ABCDEEFGH 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SHTZ A 0 A_TakeInventory("AmmoShell", 1);
		SHTZ A 0 A_GiveInventory("SSGAmmo", 1);
		SSGD IJKLMNOOPQRS 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SHTZ A 0 A_TakeInventory("AmmoShell", 1);
		SHTZ A 0 A_GiveInventory("SSGAmmo", 1);
		SHTZ A 0 A_TakeInventory("SSGAlt",1);
		SHTZ A 0 A_TakeInventory("HasUnloaded",1);
		SSGD TTUVW 1;
		NULL A 0 A_GiveInventory("QuickSwitchSSG2",1);
		SSGD X 1 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);
		NULL A 0 A_TakeInventory("QuickSwitchSSG2",1);
		goto FinishRegularReload;
		
		
	ReloadDragonBreathHook:
		MHTZ \ 1;
		MHTZ RR 1;		
		MHTZ S 2;
	    MSGD ABCDEEFGH 1;
		MSGD TTUVW 1;
		MSGD X 1;
		stop;
		
		
		
		
	KickReload:
	    SHTZ L 16;
		stop;

    AltFireDragonBreath:		
	    FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileProperFaster", random(-1,-2), 0, 4, -8, 0, 0);
        FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileFaster", random(-1,-2), 0, 4, -8, 0, 0);
        Goto ContinueAlt1;


    AltFireDragonBreath2:
        FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileProperFaster", random(1,2), 0, -4, -8, 0, 0);
        FLMT A 0 BRIGHT A_fireprojectile("FlamethrowerMissileFaster", random(1,2), 0, -4, -8, 0, 0);
        Goto ContinueAlt2;

    AltFire:
		SHTZ A 0 A_TakeInventory("Reloading",1);
		SHTZ A 0 A_jumpifinventory("meathookextended",1,"AltFireMeatHook");
	AltfireEvenIfMeathook:
		SHTZ A 0 A_CheckIfAmmo("SSGAmmo",1);
        TNT1 AAAAA 0;
		
		SHTZ A 0 A_JumpIfInventory("SSGAlt",1,"AltFire2");
		SHTZ A 0 A_TakeAmmo("SSGAmmo",1);
		SHTZ A 0 A_GiveInventory("SSGAlt",1);
        SHTZ A 0 A_ALertMonstersDX();
		//SHTZ AA 0 A_fireprojectile("GunFireSmoke", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 11);// For poor PCs
		TNT1 AAAAAAA 0 BRIGHT A_fireprojectile("ShotgunParticles", random(-12,12), 0, 6, -3, 0, random(-9,9));
		TNT1 AAA 0 BRIGHT A_fireprojectile("ShotgunParticles2", random(-12,12), 0, 6, -3, 0, random(-9,9));	
		NULL A 0 A_JumpIfInventory("UsingDragonBreath",1,"AltFireDragonBreath");
		SHTU A 0 A_FireBullets (5, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM);		
		SHTZ A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 3);//Tactical Mode deals extra damage
		SHTN A 0 A_FireBullets (6, 3, 5, 13, "ShotgunPuff2", FBF_NORANDOM);
		SHTZ A 0 A_SetPitch(pitch-5, SPF_INTERPOLATE);
		SHTZ A 0;
		TNT1 AAAAA 0 A_fireprojectile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5));
	ContinueAlt1:
	TNT1 A 0 A_HookOverlay("AltFire1Hook");
        SHTU A 1 
		{
		A_Gunlight();
		If (CountInv("UsingDragonBreath")==1)
		    { A_startsound("weapons/SSGDragonBreathAlt", 1); }
			else
			{ A_startsound("SSGALTFI", 1); }
		}
		
		SHTZ A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30);
		SHTZ A 0 A_fireprojectile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1));
		/*
		NULL A 0 offset(2,32)
		SHTZ A 0 A_SetPitch(-5.0 + pitch, SPF_INTERPOLATE)
		SHOF EFG 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		NULL A 0 offset(1,32)
		SHOF HI 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		NULL A 0 offset(0,32)
		*/
		NULL A 0 offset(3,32);
		SHTZ A 0 A_SetPitch(-5.0 + pitch, SPF_INTERPOLATE);
		SHOF EF 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(2,32);
		SHOF GH 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(1,32);
		SHOF I 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(0,32);
        Goto Ready;

	AltFire2:
		SHTZ A 0 A_TakeAmmo("SSGAmmo", 1);
        SHTZ A 0 A_ALertMonstersDX();
		//SHTZ AA 0 A_fireprojectile("GunFireSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 11);// For poor PCs
		TNT1 AAAAAAA 0 BRIGHT A_fireprojectile("ShotgunParticles", random(-12,12), 0, -1, -3, 0, random(-9,9));
		TNT1 AAA 0 BRIGHT A_fireprojectile("ShotgunParticles2", random(-12,12), 0, -6, -3, 0, random(-9,9));		
		NULL A 0 A_JumpIfInventory("UsingDragonBreath",1,"AltFireDragonBreath2");		
		SHTU B 0 A_FireBullets (5, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM);			
		SHTZ A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 3);//Tactical Mode deals extra damage
		SHTN A 0 A_FireBullets (6, 3, 5, 13, "ShotgunPuff2", FBF_NORANDOM);
		SHTZ A 0 A_SetPitch(pitch-5, SPF_INTERPOLATE);
		SHTZ A 0;
        TNT1 AAAAA 0 A_fireprojectile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5));
	ContinueAlt2:	
	TNT1 A 0 A_HookOverlay("AltFire2Hook");
        SHTU B 1
		{
		A_Gunlight();
		If (CountInv("UsingDragonBreath")==1)
		    { A_startsound("weapons/SSGDragonBreathAlt", 1); }
			else
			{ A_startsound("SSGALTFI", 1); }
		}
		SHTZ A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30);
		SHTZ A 0 A_fireprojectile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1));
        /*
		NULL A 0 offset(-2,32)
		SHTZ A 0 A_SetPitch(-5.0 + pitch, SPF_INTERPOLATE)
		SHOF EFG 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		NULL A 0 offset(-1,32)
		SHOF HI 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE)
		NULL A 0 offset(0,32)
		*/
		NULL A 0 offset(-3,32);
		SHTZ A 0 A_SetPitch(-5.0 + pitch, SPF_INTERPOLATE);
		SHOF EF 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(-2,32);
		SHOF GH 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(-1,32);
		SHOF I 1 A_SetPitch(+1.0 + pitch, SPF_INTERPOLATE);
		NULL A 0 offset(0,32);
		SHTZ A 0 A_TakeInventory("SSGAlt", 1);
		TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, "Ready3");
		TNT1 A 0 A_JumpIfInventory("PowerSpeed2",1, "Ready3");
		TNT1 AA 0;
		Goto Reload;
	Altfire1hook:
		MHTU A 1 A_hookflags();
		Goto COntinueAltFireHook;
		
	Altfire2Hook:
		MHTU B 1 A_hookflags();
	ContinueAltFireHook:
	
		MHOF EF 1; 
		MHOF GH 1; 
		MHOF I 1 ;
		Stop;
		
      Reload2:
        SHTZ A 0 A_TakeInventory("Reloading",1);
		SHTZ A 0 A_JumpIfInventory("AmmoShell",1,1);
		Goto NoAmmo;
		TNT1 A 0 A_HookOverlay("reloadhook2");
		SHTZ A 0 A_TakeInventory("SSGAlt",1);
		XXXX X 0 A_startsound("foley/SSGlowerBeforeOpen",10);
	    SHO9 HIJKLMN 1 ;
		TNT1 A 0 A_startsound("weapons/sshoto");
		NULL A 0 A_overlay(2,"ReloadSmokeRight");
		TNT1 A 0 A_JumpIfInventory("UsingDragonBreath",1, "AltDragonBreathReload");
        SHTZ [ 1;
		SHTZ A 0 A_startsound("foley/SSGshellEject",10,0,0.5);
		TNT1 A 0 A_fireprojectile("SSGCaseSpawner",0,0,-4, -14)	;
		SHT7 L 3;
		//
		SHT7 MNOPPPQQ 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SHTZ A 0 A_TakeInventory("AmmoShell", 1);
 		SHTZ A 0 A_GiveInventory("SSGAmmo", 1);
		SHT7 RSTUV 1;
		TNT1 A 0 A_GiveInventory("QuickSwitchSSG2",1);
		TNT1 A 2 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB)	;
		TNT1 A 0 A_TakeInventory("QuickSwitchSSG2",1);
		SHTZ A 0 A_startsound("foley/SSGraiseAfterClose",10);
		SH69 LD 1;
		SHTZ A 0 A_startsound("weapons/sshotc");
		SH69 EF 1	;
		SH69 G 1;
		SH69 H 1;
		SH69 IJK 1;
		SHTZ A 0 A_ReFire();
		SHTZ A 1;
        Goto Ready;
		
		ReloadHook2:
			 MHO9 HIJKLMN 1 ;
			  MHTZ [ 1;
			 MHT7 L 3;
			 MHT7 MNOPPPQQ 1;
			 MHT7 RSTUV 1;
			 TNT1 A 2;
			 MH69 LD 1;
		MH69 EF 1	;
		MH69 G 1;
		MH69 H 1;
		MH69 IJK 1;
		MHTZ A 1;
		STOP;

        AltDragonBreathReload:
		TNT1 A 0 A_HookOverlay("AltDragonBreathReloadHook");
		SHTZ "]" 1;
		SHTZ A 0 A_startsound("foley/SSGshellEject",10,0,0.5);
		TNT1 A 0 A_fireprojectile("SSGDragonBreathCaseSpawner",0,0,-4, -14)	;
		SH69 M 3;
		
		SSGD YZ 1;
		SSGD [ 1;
		SSGD \ 1;
		SSGD ] 1;
		SSGD PPQRS 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SHTZ A 0 A_TakeInventory("AmmoShell", 1);
 		SHTZ A 0 A_GiveInventory("SSGAmmo", 1);
		SSGD TTUVW 1;
		NULL A 0 A_GiveInventory("QuickSwitchSSG2",1);
		SSGD X 1 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);
		NULL A 0 A_TakeInventory("QuickSwitchSSG2",1);
		goto FinishRegularReload;
		
	AltDragonBreathReloadHook:
		MHTZ ] 1;
		MH69 M 3;
		MSGD YZ 1;
		MSGD [ 1;
		MSGD \ 1;
		MSGD ] 1;
		MSGD PPQRS 1;
		MSGD TTUVW 1;
		MSGD X 1 A_WeaponReadyDX(WRF_NOFIRE | WRF_NOBOB);
		Stop;
		
		
		
		
	 Spawn:
		TNT1 A 0 NoDelay A_jump(80,"Spawn2");
		SGN2 A -1;
		Stop;
	Spawn2:
		MGN2 A -1;
		Stop;
	
	Unload:
		SHTZ A 1 A_WeaponReady();
		SHTZ A 0 A_ZoomFactor(1.0);
		SHTZ A 0 A_Takeinventory("Unloading",1);
		SHTZ A 0 A_Takeinventory("ADSmode",1);
		SHTZ A 0 A_Takeinventory("Zoomed",1);
        SHTZ A 0 A_JumpIfInventory("SSGAmmo",1,3);
        Goto Ready;
        TNT1 AAA 0;
		SHTZ A 0 A_Takeinventory("Zoomed",1);
		SHTZ A 0 A_GiveInventory ("Pumping", 1);
		SHTZ A 0 A_Takeinventory("Unloading",1);
		
	RemoveBullets:
		TNT1 AAAA 0;
		SHTZ A 0 A_JumpIfInventory("SSGAmmo",1,3);
		Goto FinishUnload;
        TNT1 AAAAAA 0;
		SHTZ A 0 A_Takeinventory("SSGAmmo",1);
		SHTZ A 0 A_Giveinventory("AmmoShell",1);
		Goto RemoveBullets;
	
	FInishUnload:
		SHTZ BCDEFGH 1;
		SHTZ I 3;
		SHTZ JLMNOP 1;
		//SH69 L 1
		SHTZ A 0 A_startsound("weapons/sshoto");
		TNT1 A 16;
		SHTZ A 0 A_GiveInventory("HasUnloaded", 1);
		SHTZ A 0 A_Takeinventory("Unloading",1);
        SHO9 LKJIH 1;
        SHTZ A 0 A_startsound("weapons/sshotc");
		SHTZ A 0 A_GiveInventory ("Pumping", 1);
		Goto Ready;
		
		NoDual:
		A12G A 0 A_TakeInventory("StartDualWield",1);
		PIST F 0 A_Print("You don't have Energy Shells!",2);
		Goto Ready;
		
	DualWield:	
	    RIFG A 0 A_Takeinventory("StartDualWield",1);
		NULL A 0 A_JumpIfInventory("UsingDragonBreath",1,"BackToBuckshot");
		//NULL A 0 A_ChangeFlag("WEAPON.NOAUTOFIRE",1);
		TNT1 A 0 A_GiveInventory("UsingDragonBreath",1);
		TNT1 A 0 A_Print("\ciSwitching to dragon breath.",1);
		TNT1 A 0 ChangeAmmoIcon1("SHEL[0");
		
		
		SHTZ A 0 A_JumpIfInventory("SSGAlt", 1, "Reload2");//Check if still has a shell on left barrel
		
		SHTZ A 0 A_JumpIfInventory("SSGAmmo", 2, "ContinueSwitchToDB");//Checks if the gun is already loaded
		
		TNT1 A 0 A_JumpIf(CountInv("AmmoShell")==0,"ContinueSwitchToDB");//No ammo to reload? Continue the non-reloading anim.
		
		TNT1 A 0 A_JumpIf(CountInv("AmmoShell")==1,"Reload2");//Got only one shell? Reload just one barrel.
		
		Goto Reload;
	ContinueSwitchToDB:
		TNT1 A 0 A_HookOverlay("SwitchToDBHook");
		SHTZ BCDEFGH 1;
		SHTZ I 1;
		XXXX X 0 A_startsound("foley/SSGlowerBeforeOpen",10);
		SHTZ JLMNOP 1;
		SHTZ A 0 A_startsound("weapons/sshoto");
		SHOF J 1;
		SHTZ RR 1;
		SHTZ S 1	;
		
		SSGD ABCDEFGH 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SSGD IJKLMNOOPQRS 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SSGD TUVWX 1;
		SHTZ A 0 A_startsound("foley/SSGraiseAfterClose",10);
		SH69 LD 1;
		SHTZ A 0 A_startsound("weapons/sshotc");
		SH69 EF 1	;
		SH69 G 1;
		SH69 H 2;
		SH69 IJK 1;
		SHTZ A 0 A_ReFire();
		SHTZ A 1;
		
		RIFG A 0 A_Takeinventory("StartDualWield",1);
		Goto Ready;
		
	SwitchToDBHook:
		MHTZ BCDEFGH 1;
		MHTZ I 1;
		MHTZ JLMNOP 1;
		MHOF J 1;
		MHTZ RR 1;
		MHTZ S 1	;
		MSGD ABCDEFGH 1;
		MSGD IJKLMNOOPQRS 1;
		MSGD TUVWX 1;
		MH69 LD 1;
		MH69 EF 1;	
		MH69 G 1;
		MH69 H 2;
		MH69 IJK 1;
		MHTZ A 1;
		STOP;
		
		
		
	BackToBuckshot:
	   // NULL A 0 A_ChangeFlag("WEAPON.NOAUTOFIRE",0);
	    TNT1 A 0 A_TakeInventory("UsingDragonBreath",1);
	    TNT1 A 0 A_Print("\cgSwitching to buckshot.",1);
		TNT1 A 0 ChangeAmmoIcon1("SHELA0");
		
		SHTZ A 0 A_JumpIfInventory("SSGAlt", 1, "Reload2");//Check if still has a shell on left barrel.
		
		SHTZ A 0 A_JumpIfInventory("SSGAmmo", 2, "ContinueSwitchToBuck");//Checks if the gun is already loaded.
		
		TNT1 A 0 A_JumpIf(CountInv("AmmoShell")==0,"ContinueSwitchToBuck");//No ammo to reload? Continue the non-reloading anim.
		
		TNT1 A 0 A_JumpIf(CountInv("AmmoShell")==1,"Reload2");//Got only one shell? Reload just one barrel.
		
		Goto Reload;
	ContinueSwitchToBuck:
		TNT1 A 0 A_HookOverlay("SwitchToBuckHook");
		SHTZ BCDEFGH 1;
		SHTZ I 1;
		XXXX X 0 A_startsound("foley/SSGlowerBeforeOpen",10);
		SHTZ JLMNOP 1;
		SHTZ A 0 A_startsound("weapons/sshoto");
		SHOF J 1;
		SHTZ RR 1;
		SHTZ S 1	;
		SHTZ TUVWX 1;
		SHTZ A 0 A_startsound("weapons/sshotl");
		SHTZ YZ 1;
		SH69 ABCL 1;
		SHTZ A 0 A_startsound("foley/SSGraiseAfterClose",10);
		SH69 LD 1;
		SHTZ A 0 A_startsound("weapons/sshotc");
		SH69 EF 1	;
		SH69 G 1;
		SH69 H 1;
		SH69 IJK 1;
		RIFG A 0 A_Takeinventory("StartDualWield",1);
		Goto Ready;
		
		
	SwitchToBuckHook:
		MHTZ BCDEFGH 1;
		MHTZ I 1;
		MHTZ JLMNOP 1;
		MHOF J 1;
		MHTZ RR 1;
		MHTZ S 1	;
		MHTZ TUVWX 1;
		MHTZ YZ 1;
		MH69 ABCL 1;
		MH69 LD 1;
		MH69 EF 1	;
		MH69 G 1;
		MH69 H 1;
		MH69 IJK 1;
		STOP;
		
		Nomeathookoverlay:
		TNT1 A 1;
		LOOP;
		
		
		AltfireMeatHook:
    TNT1 A 0 A_trymeathook(1600);
    Goto Ready;
	
	SpecialAction:
	TNT1 A 0 A_takeinventory("swapriflespecial",1);
	TNT1 A 0 A_jumpifinventory("meathook",1,1);
	Goto noammo;
	TNT1 A 0 A_HookOverlay("nomeathookoverlay");
	TNT1 A 0 A_jumpifinventory("MeatHookExtended",1,"RetractMeathook");
	TNT1 A 0 ChangeAmmoIcon2("MGN2A0");
	TNT1 A 0 
	{
	invoker.theoverlayalpha = 1.0;
	A_giveinventory("meathookextended",1);
	}
	//TNT1 A 0 A_jumpifinventory("meathook",1,1);
	//Goto ready;
	TNT1 A 0 A_startsound("MHKEXT",10);
	MHKS DCBA 1;
	Goto ready;
	
	RetractMeathook:
	TNT1 A 0 A_takeinventory("meathookextended",1);
	TNT1 A 0 ChangeAmmoIcon2("SGN2A0");
	//TNT1 A 0 A_jumpifinventory("meathook",1,1);
	//Goto ready;
	TNT1 A 0 A_startsound("MHKRTRCT",10);
	MHKS ABCD 1;
	Goto ready;
	
	}
}
