CLASS BattleRifleAmmo : Ammo
{
	Default
	{
   Inventory.Amount 0;
   Inventory.MaxAmount 15;
   Ammo.BackpackAmount 0;
   Ammo.BackpackMaxAmount 15;
   Inventory.Icon "BR45A0";
   }
}

CLASS BattleRifle : Brutalweapon
{
	Default
	
	{
	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive1 50;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Clip2";
	Weapon.AmmoType2 "BattleRifleAmmo";
	Obituary "%o was pierced by %k's Battle Rifle.";
    Inventory.PickupSound "BR45PICK";
	Inventory.Pickupmessage "You got the Battle Rifle! (Slot 4)";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOALERT;
	+WEAPON.EXPLOSIVE;
	+FORCEXYBILLBOARD;
	scale 0.8;
	damagetype "Revolver";
	Weapon.SelectionOrder 1550;
	Inventory.AltHUDIcon "BR45A0";
	BrutalWeapon.weight 2;
	Tag "$BDPBR";


	}
	bool altzoom;
	bool burstselected;
	int burstcount;
	int savedzoom;
	bool scopezoom2;
	
	Action void a_FireBattleRifle()
	{
	
		FLineTraceData ricochetdata;
		invoker.owner.LineTrace(invoker.owner.angle, 4096, invoker.owner.pitch, TRF_SOLIDACTORS, offsetz: invoker.owner.player.viewz - invoker.owner.pos.z, data: ricochetdata);
		vector3 hitNormal;
		if(ricochetdata.HitType == TRACE_HitWall )
		{
			if(!ricochetdata.LineSide)
			{
				hitnormal = (ricochetdata.Hitline.delta.y, -ricochetdata.Hitline.delta.x, 0).unit();
			}
			else
			{
				hitnormal = (-ricochetdata.Hitline.delta.y, ricochetdata.Hitline.delta.x, 0).unit();
			}
			
		}
		else if (ricochetdata.HitType == TRACE_HitFloor)
		{
			hitnormal = ricochetdata.HitSector.FloorPlane.normal;
			
		}
		else if (ricochetdata.HitType == TRACE_HitCeiling)
		{
			hitnormal = ricochetdata.HitSector.CeilingPlane.normal;
		}
		Vector3 PlayerAngle = BDPMATH.AngletoVector3(1.0,invoker.owner.angle,invoker.owner.pitch);
		
		Vector3 BounceAngle = BDPMATH.BounceNormal(PlayerAngle,hitNormal);
		
		Double NextShotAngle;
		Double NextShotPitch;
		
		[NextShotAngle, NextShotPitch] = BDPMATH.Vector3toangles(BounceAngle);
		
		//Console.printf("%f",BouncedAngle);
		Vector3 NextShotPosition = level.Vec3Offset(ricochetData.hitlocation, hitnormal * 2.0);
		
		A_FireBullets (0, 0, -1, 25, "BR45BulletPuff", FBF_NORANDOM,8192,"decorativetracer",-12);
		If(ricochetdata.HitType == TRACE_HitWall || ricochetdata.HitType == TRACE_HitFloor || ricochetdata.HitType == TRACE_HitCeiling)
		{
			Invoker.Owner.LineAttack(NextShotAngle,8192,NextShotPitch,35,"Pistol","BR45BulletPuff",LAF_ABSPOSITION | LAF_ABSOFFSET,null,NextShotPosition.Z,NextShotPosition.x,NextShotPosition.y);
			let ricochettracer = Invoker.owner.spawn("decorativetracer",nextshotposition);
			If(ricochettracer)
			{
				ricochettracer.angle = nextshotangle;
				ricochettracer.pitch = nextshotpitch;
				ricochettracer.vel3dfromangle(140,nextshotangle,nextshotpitch);
			}
			
		}
	}
	
	States
	{
	
		GrenadeThrowFlash:
			BR4S ABCDE 1;
			TNT1 A 22;
			BR4S EDCBA 1;//32 in total
			stop;
			
		FuckYouFlash:
			BR4K ABCDEEEEEEEEEEEEEEEEEEEEEEDCBA 1; //18
			stop;
			
		KickingFlash:
			BR4K ABCDEEEEEEEEEEDCBA 1;
			Goto Ready;
		AirKickingFlash:
			BR4K ABCDEEEEEEEEEEDCBA 1; //18
			Goto Ready;
	
		SlideKickingStart:
			BR4K ABCDE 1;
			BR4K EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1 { //39 total
				if (CountInv("Kicking") == 0) {
					return resolvestate("SlideKickingEnd");
				}
				return resolvestate(null);
			}
			Goto Ready;

		SlideKickingEnd:
			BR4K EEEEEEDCBA 1; //10
			Goto Ready;
			
		SprintOverlay:
			BR4K ABCD 1;
			KeepSprinting:
			BR4K E 1 A_weaponreadyDX(WRF_ALLOWRELOAD,FALSE,FALSE);
			"####" A 0 A_keepsprinting();
			Goto ReturnFromSprint;
			

	
		ReturnfromSprint:
			BR4K DCBA 1 A_weaponreadyDX(WRF_ALLOWRELOAD,FALSE,FALSE);
			Goto ready;
	
		Select:
			TNT1 A 0;
			//NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			Goto SelectFirstPersonLegs;
		SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1); 
			UNHG A 0 A_takeinventory("disabletilting",1);
			TNT1 AAAAAAAAAAAAAA 0 A_Raise();
			TNT1 A 1 A_Raise();
			//TNT1 A 0 A_Giveinventory("RailgunSelected",1);
			RIFL C 0 A_GunSlingerReload("battlerifleammo",15,"clip2",1);
			RIFL C 0 A_SetCrosshairDX("BR45Ret",2000,0.2);
		ReturnFromNothing:
			TNT1 A 0 A_startSound("BR45PICK",1);
			TNT1 AAA 0;
		
			Goto SelectAnimation;
		
		SelectAnimation:
			//NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			BR4S EDCBA 1 A_WeaponReady(WRF_NOFIRE);
			GOto Ready;
			Deselect: 
				"####" A 0 A_TakeInventory("IsPlayingDoxMod",1);
				"####" A 0 A_ClearOverlays(-2,-2);
				BR4S ABCDE 1;
				TNT1 A 0 A_StopSOund(1);
				TNT1 A 0 A_StopSOund(2);
				TNT1 A 0 A_StopSOund(6);
				TNT1 A 0 A_TakeInventory("TossGrenade", 1);
				TNT1 AAAAAAAAAAAAAAAA 0 A_lower();
				TNT1 A 1 A_Lower();
				Wait;
		Ready:
			TNT1 A 0 
			{
				invoker.burstcount = 0;
			}
			
			BR45 B 1 A_weaponreadyDX(WRF_ALLOWRELOAD);
			TNT1 A 0 A_jumpif(countinv("battlerifleammo") < 1 && countinv("clip2") > 0,"reload");
			RIFL C 0 A_SetCrosshairDX("BR45Ret",2000,0.2);
			LOOP;

		Fidget:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_StartSound("RAILMAG2", 5);
			RAIL PR 1 A_WeaponReadyDX();
			RAIL TWWVUUUUUUUUU/*UUUUUUUUUU*/ 1 A_WeaponReadyDX();
			TNT1 A 0 A_StartSound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1 A_WeaponReadyDX();
			Goto ready;

		Fire:
			TNT1 A 0 A_CheckIfAmmo("battlerifleammo");
			TNT1 A 0 A_semiflag();
			RAIL A 0 
			{
				A_overlay(-5,"DoNothing");
				A_zoomfactor(0.7);
				A_fireprojectile("shotgunparticles2",random(12,-12),false,0,0,0,random(9,-9));
				A_FireBattleRifle();
					
					A_startsound("BR45FIRE",1,0,0.85);
				
				
				
				
				A_QuadSound();
				A_ALertMonstersDX();
				A_takeammo("battlerifleammo",1);
				invoker.burstcount++;
			}
			TNT1 A 0 A_GunLight();
			BR4F A 0 A_Jump(85,3);
			BR4F B 0 A_Jump(85,2);
			BR4F C 0;
			BR4F "#" 0;
			BR4F "#" 1;
			TNT1 A 0 
			{
				A_zoomfactor(1.0);
				A_fireprojectile("riflecasespawnversion2",5,false,0,-14,0);
				If(countinv("battlerifleammo") < 1)
				{
					A_fireprojectile("RifleClipSpawn",5,false,0,-14,0);
				}
			}
			TNT1 A 0 A_jumpif(invoker.burstcount < 3,"burstfirerecoil");
			BR45 DDE 1;
			
			BR45 FGH 1;
			BR45 B 7;
			TNT1 A 0 
			{
				invoker.burstcount = 0;
			
			}
			
			TNT1 A 0 A_Semirefire("Fire","SemiAutoLul");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"reload");
			
			Goto Ready;
			
			BurstFireRecoil:
			BR45 DEF 1;
			Goto Fire;
			
			SemiAutoLul:
			BR45 B 1;
			TNT1 A 0 A_Semirefire("Fire","SemiAutoLul");
			Goto Ready;
		
		
		Reload:
			TNT1 A 0
			{
				invoker.semiautofired = false;
			}
			TNT1 A 0 A_takeinventory("reloading",1);
			TNT1 A 0 A_CheckIfAmmo("clip2",1,"noammo");
			TNT1 A 0 A_jumpifinventory("battlerifleammo",15,"ready");
			TNT1 A 0 A_startsound("BR45OPEN",3);
			BR4R ABCDE 1;
			TNT1 A 0
			{
			If(countinv("battlerifleammo") > 0)
				{
					A_fireprojectile("RifleClipSpawn",5,false,0,-14,0);
					A_DiscardMag("BattleRifleAmmo",0);
				}
			}
			BR4R FGGGGGGHIJKLMNOP 1;
			TNT1 A 0 
			{
				A_startsound("BR45LOAD",3);
				A_reload("battlerifleammo", 15, "clip2");
			}
			BR4R QRSTUVWX 1;
			Goto Ready;
		
			
		NoAmmo:
			TNT1 A 0 
			{
				A_StartSound("weapons/empty", 3);
				invoker.burstcount = 0;
			}
		NoAmmo2:

		BR45 B 1;
		PISZ A 0 A_SemiRefire("NoAmmo2","NoAmmo2");
		TNT1 A 0 A_CheckIfAmmo("clip2",1,"ready");
		Goto reload;
			
		AltFire:
	//	RLNG A 0 ACS_NamedExecuteAlways("HoldAim");
		//RLNG A 0 A_JumpIfInventory("Zoomed",1,"NoAim");
		//RLNG A 0 A_Giveinventory("Zoomed",1)
        
		
		RLNG A 0 
		{
			A_overlay(-5,"DoNothing");
			A_ZoomFactor(3.0);
			A_SetCrosshairDX("Null");
			invoker.altzoom = false;
			a_takeinventory("swapriflespecial",1);
		}
		BR4Z ABCD 1;
		SMGG A 0 A_StartSound("ADSIN");
	AltFireContinue:
		
		StillAiming:
		//TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
		TNT1 A 0 A_WeaponZoom();
		Goto Aim2;
		Aim1:
			TNT1 A 0;
			SMGG A 0 
			{
				A_ZoomFactor(3.0);
				If(countinv("swapriflespecial") > 0)
				{
					Takeinventory("swapriflespecial",1);
					
					If(invoker.scopezoom2)
					{
						invoker.scopezoom2 = false;
						A_StartSound("ADSOUT");
					}
					Else
					{
						invoker.scopezoom2 = true;
						A_StartSound("ADSIN");
					}
				}
				If(invoker.scopezoom2)
				{
					a_zoomfactor(9.0);
				}
				Else
				{
					A_ZoomFactor(3.0);
				}
			}
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
			Goto noaim;
		Aim2:
			TNT1 A 0 
			{
			/*
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
				*/
				
			}
			TNT1 A 0 A_jumpif(invoker.altzoom,"Aim3");
			//SMGG A 0 A_ZoomFactor(3.0);
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"GoingToAim3");
			LOOP;
	GoingToAim3:
	TNT1 A 0 {invoker.altzoom = true;}
	TNT1 A 0 A_zoomfactor(9.0);
	TNT1 A 0 A_StartSound("ADSIN");
	BR4Z D 5 BRIGHT;
	Aim3:
			TNT1 A 0;
			SMGG A 0 A_ZoomFactor(9.0);
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"NoAim");
			LOOP;
	ZoomedFire:
		TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"NoAmmoZoomed");
		TNT1 A 0 A_semiflag();
			RAIL A 0 
			{
				A_overlay(-5,"DoNothing");
				invoker.savedzoom = invoker.owner.player.fov;
				//console.printf("%i",invoker.savedzoom);
				invoker.owner.player.fov = invoker.owner.player.fov * 0.7;
				A_fireprojectile("shotgunparticles2",random(12,-12),false,0,0,0,random(9,-9));
				
					A_FireBattleRifle();
					A_startsound("BR45FIRE",1,0,0.85);
				
			
				
				//A_setpitch(pitch - 1.5);
				A_QuadSound();
				A_ALertMonstersDX();
				A_takeammo("battlerifleammo",1);
				invoker.burstcount++;
			}
			TNT1 A 0 A_GunLight();
			BR4Z D 1 BRIGHT;// A_setpitch(pitch + 0.5);
			TNT1 A 0 
			{
				invoker.owner.player.fov = invoker.savedzoom;
				A_fireprojectile("riflecasespawnversion2",5,false,15,-7,0);
				If(countinv("battlerifleammo") < 1)
				{
					A_fireprojectile("RifleClipSpawn",5,false,15,-7,0);
				}
			}
			BR4Z DD 1 BRIGHT; //A_setpitch(pitch + 0.5);
			BR4Z D 1 BRIGHT;
			TNT1 A 0 A_jumpif(invoker.burstcount < 3,"ZoomedFire");
			BR4Z D 10 BRIGHT;
			TNT1 A 0 
			{
				invoker.burstcount = 0;
			
			}
			TNT1 A 0 A_Semirefire("ZoomedFire","SemiAutoLulZoomed");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"zoomedreload");
			
			TNT1 A 0 A_WeaponZoom2();
			Goto StillAiming;
			
			SemiAutoLulZoomed:
			BR4Z D 1 BRIGHT;
			TNT1 A 0 A_Semirefire("ZoomedFire","SemiAutoLulZoomed");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"zoomedreload");
			
			TNT1 A 0 A_WeaponZoom2();
			Goto StillAiming;
			
		TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
		
		/*
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;
		Goto Pumping;
		*/
	NoAmmoZoomed:
			
			TNT1 A 0
			{
				invoker.burstcount = 0;
				A_startsound("weapons/empty",4);
			}
			BR4Z D 1 BRIGHT;
			PISZ A 0 A_SemiRefire("NoAmmoZoomed","NoAmmoZoomed");
			TNT1 A 0
			{
				If(countinv("battlerifleammo") < 1 && Countinv("clip2") > 0)
					{
						Return resolvestate("NoAmmoZoomed2");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			
			TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
	Noammozoomed2:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		RIFL C 0 A_SetCrosshairDX("BR45Ret",2000,0.2);
		//NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Reload;
		
	ZoomedReload:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
		RIFL C 0 A_SetCrosshairDX("BR45Ret",2000,0.2);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		//NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Reload;
		
	NoAim:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("swapriflespecial", 1);
		TNT1 A 0 A_takeinventory("startdualwield",1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
		RIFL C 0 A_SetCrosshairDX("BR45Ret",2000,0.2);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		//NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Ready;
		
		
	
			/*
		DualWield:
			TNT1 A 0 A_takeinventory("startdualwield",1);
			TNT1 A 0;
			BR45 B 1 A_weaponoffset(0,33);
			BR45 B 1
			{
				A_weaponoffset(0,34);
				
				A_startsound("dryfire",2);
				If(invoker.burstselected)
				{
					invoker.burstselected = false;
					A_Print("Semi Auto");
				}
				Else
				{
					invoker.burstselected = true;
					A_Print("Burst Fire");
				}
			}
			BR45 B 4;
			BR45 "#" 1 A_weaponoffset(0,33);
			BR45 "#" 1 A_weaponoffset(0,WEAPONTOP, WOF_INTERPOLATE);
			TNT1 A 0 A_takeinventory("startdualwield",1);
			Goto Ready;
			*/
			
		Spawn:
			BR45 A -1;
			LOOP;

		Unload:
			RAIL A 1 A_WeaponReady();
			RAIL A 0 A_ZoomFactor(1.0);
			RAIL A 0 A_Takeinventory("Unloading",1);
			RAIL A 0 A_Takeinventory("ADSmode",1);
			RAIL A 0 A_Takeinventory("Zoomed",1);
			RAIL A 0 A_JumpIfInventory("NuRailgunAmmo",1,1);
			Goto Ready;
		RemoveBullets:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1;
			RAIL A 0 A_JumpIfInventory("NuRailgunAmmo",1,1);
			Goto FinishUnload;
			TNT1 A 0 A_StartSound("RAILMAG2", 5);
			RAIL PR 1;
			RAIL TWWV 1;
			RAIL A 0 A_Takeinventory("NuRailgunAmmo",1);
			RAIL A 0 A_Giveinventory("AmmoCell",10);
			RAIL UUUUUUUUU/*UUUUUUUUUU*/ 1;
			TNT1 A 0 A_StartSound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1;
			Goto RemoveBullets+19;
		FinishUnload:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1;
			Goto Ready;
	}
	
}