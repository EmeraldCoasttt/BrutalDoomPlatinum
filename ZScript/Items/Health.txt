Class HealthPlus : Health Replaces HealthBonus
{
	Default
	{
		+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.NEVERRESPAWN;
		Inventory.Amount 2;
		Inventory.MaxAmount 300;
		Tag "Health Bonus";
		Inventory.PickupMessage "$GOTHTHBONUS";
		Health.LowMessage 10, "Picked up a health bonus. It's better than nothing...";
		Inventory.PickupSound "items/healthbonus";
	}
	States
	{
	Spawn:
		BON1 A 0;
		BON1 A 0 ACS_NamedExecuteAlways("BDCheckDecorations", 0, 0, 0, 0);//Check if advanced decorations are disabled.
		TNT1 A 0 A_JumpIf(getCVAR("Dox_SimplePickups")==true,"Spawn2");
	NULL A 0 A_jump(128,2);
	NULL A 0 A_ChangeFlag("XFLIP",1);
	TNT1 A 0;
		TNT1 A 0 A_Jump(128,"Spawn4"); //Variation
	Spawn2:	
        TNT1 A 0 A_CheckSight ("Spawn3");
		BON1 ABCDCB 2 A_SpawnItem("BlueFlareSmallItem",0,7);
		Loop;
	Spawn3:
		BON1 A 9;
		Goto Spawn2;
		
	Spawn4:	
        TNT1 A 0 A_CheckSight ("Spawn5");
		BON1 IJKLKJ 2 A_SpawnItem("BlueFlareSmallItem",0,7);
		Loop;
	Spawn5:
		BON1 I 9;
		Goto Spawn4;
		
	Vanilla:
		BON1 ABCDCB 2;
		Loop;
	}
	 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 10;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

Class LightArmor : BasicArmorPickup Replaces GreenArmor
{
	Default
	{
		//Scale 0.8
		Scale 1.3;
		Radius 20;
		Height 16;
		Inventory.Pickupmessage "Picked up the Light armor.";
		Inventory.Icon "ARM1A0";
		Armor.SavePercent 33.3;
		Armor.SaveAmount 100;
		Inventory.PickupSound "ARMOR";
	}
	States
	{
	Spawn:
	TNT1 A 1;
	TNT1 A 0 A_JumpIf(getCVAR("Dox_SimplePickups")==true,"Spawn3");
	NULL A 0 A_jump(128,2);
	NULL A 0 A_ChangeFlag("XFLIP",1);
	TNT1 A 0;
	TNT1 A 0 A_Jump(256,"Spawn1","spawn2","spawn3","spawn4");
	
	Spawn1:
	    TNT1 A 0 A_CheckSight("Spawn1Alt");
		ARM1 A 10;
		ARM1 AAAAAA 2 bright A_SpawnItem("GreenFlareMedium",0,10);
		loop;
	Spawn1Alt:
		ARM1 A 19;
		Goto Spawn1;
		
		Spawn2:
	    TNT1 A 0 A_CheckSight("Spawn2Alt");
		ARM1 B 10;
		ARM1 BBBBBB 2 bright A_SpawnItem("GreenFlareMedium",0,10);
		loop;
	Spawn2Alt:
		ARM1 B 19;
		Goto Spawn2;
		
		Spawn3:
	    TNT1 A 0 A_CheckSight("Spawn3Alt");
		ARM1 C 10;
		ARM1 CCCCCC 2 bright A_SpawnItem("GreenFlareMedium",0,10);
		loop;
	Spawn3Alt:
		ARM1 C 19;
		Goto Spawn3;
		
		Spawn4:
	    TNT1 A 0 A_CheckSight("Spawn4Alt");
		ARM1 D 10;
		ARM1 DDDDDD 2 bright A_SpawnItem("GreenFlareMedium",0,10);
		loop;
	Spawn4Alt:
		ARM1 D 19;
		Goto Spawn4;
		
	}
	override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 100;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

// Blue armor ---------------------------------------------------------------

Class HeavyArmorSpawner: RandomSpawner Replaces BlueArmor
{
	Default
	{
		DropItem "HeavyArmor", 255, 9;
		//DropItem "EnergyArmor", 255, 4
		DropItem "SkulltagArmor", 255, 2;
	}
}



Class EnergyArmor : CustomInventory 
{
	Default
	{
	+COUNTITEM;
		+INVENTORY.ALWAYSPICKUP;
		Inventory.PickupMessage "You got the Energy Shield!";
		Inventory.PickupSound "misc/p_pkup";
		Inventory.PickupSound "items/energyshield";
		Scale 1.3;
		Tag "Regenerating Armor";
	}
	States
	{
	Spawn:
		ARM2 EEEFFF 1 BRIGHT A_SpawnItem("BlueFlareSmall",0,10);
		Loop;

	Pickup:
		TNT1 A 0 A_GiveInventory("PowerShield");
		//TNT1 A 20 ACS_NamedExecuteAlways("BerserkMessage")
		Stop;
		}
	override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 500;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

Class HeavyArmor : BasicArmorPickup //Replaces BlueArmor
{
	Default
	{
	Scale 1.3;
	Radius 20;
	Height 16;
	Inventory.Pickupmessage "Picked up the Heavy Combat armor.";
	Inventory.Icon "ARM2A0";
	Armor.Savepercent 50.1;
	Armor.Saveamount 200;
    Inventory.PickupSound "ARMOR";
	}
	States
	{
	Spawn:
	TNT1 A 1;
	TNT1 A 0 A_JumpIf(getCVAR("Dox_SimplePickups")==true,"Spawn3");
	NULL A 0 A_jump(128,2);
	NULL A 0 A_ChangeFlag("XFLIP",1);
	TNT1 A 0;
	TNT1 A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3","spawn4");
	
	Spawn1:
		TNT1 A 0 A_CheckSight("Spawn1Alt");
		ARM2 A 10;
		ARM2 AAAAA 2 bright A_SpawnItem("BlueFlareMedium3",0,10);
		loop;
	Spawn1Alt:
		ARM2 A 19;
		Goto Spawn1;
		
		Spawn2:
		TNT1 A 0 A_CheckSight("Spawn2Alt");
		ARM2 B 10;
		ARM2 BBBBB 2 bright A_SpawnItem("BlueFlareMedium3",0,10);
		loop;
	Spawn2Alt:
		ARM2 B 19;
		Goto Spawn2;
		
		Spawn3:
		TNT1 A 0 A_CheckSight("Spawn3Alt");
		ARM2 C 10;
		ARM2 CCCCC 2 bright A_SpawnItem("BlueFlareMedium3",0,10);
		loop;
	Spawn3Alt:
		ARM2 C 19;
		Goto Spawn2;
		
		Spawn4:
		TNT1 A 0 A_CheckSight("Spawn4Alt");
		ARM2 D 10;
		ARM2 DDDDD 2 bright A_SpawnItem("BlueFlareMedium3",0,10);
		loop;
	Spawn4Alt:
		ARM2 D 19;
		Goto Spawn4;
	}
	override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 200;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

// Skulltag armor ---------------------------------------------------------------

CLASS SkulltagArmor : BasicArmorPickup
{
	Default
	{
	Scale 1.3;
	Radius 20;
	Height 16;
	Inventory.Pickupmessage "Picked up Demonic armor.";
	Inventory.Icon "ARM4A0";
	Armor.Savepercent 66.6;
	Armor.Saveamount 300;
    Inventory.PickupSound "ARMOR";
	}
	States
	{
	Spawn:
	TNT1 A 1;
//	TNT1 A 0 A_Jump(256,"Spawn1","Spawn2","Spawn3","spawn4")
	
	Spawn1:
		TNT1 A 0 A_CheckSight("Spawn1Alt");
		ARM4 A 10;
		ARM4 AAAAA 2 bright A_SpawnItem("RedFlareMedium",0,10);
		loop;
	Spawn1Alt:
		ARM4 A 19;
		Goto Spawn1;
}
override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 300;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

Class GiveArmor : BasicArmorBonus
{
	Default
	{
	Radius 20;
	Height 16;
	Inventory.Pickupmessage "$GOTARMBONUS";
	Inventory.Icon "BON2I0";
	Armor.Savepercent 33.1;
	Armor.Saveamount 1;
	Armor.Maxsaveamount 9999;
	+COUNTITEM;
	+INVENTORY.ALWAYSPICKUP;
	}
	States
	{
	Spawn:
		BON2 AAABBBCCCDDDCCCBBB 2;
		loop;
	}
	 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 10;
			return true;
		}
		Else
		{
		return false;
		}
	}
}


Class CrueltyBonus5armor : BasicArmorBonus
{
	Default
	{
	-COUNTITEM;
	Radius 220;
	+INVENTORY.ALWAYSPICKUP;
	
	Inventory.Icon "BON2I0";
	Armor.Savepercent 50.1;
	Armor.Saveamount 5;
	Armor.Maxsaveamount 300;
	Inventory.PickupMessage "Cruelty Bonus awarded! +5 Armor";
	}
	States
	{
	Spawn:
        TNT1 A 50;
		Stop;
	}
}


// Armor bonus --------------------------------------------------------------

Class ArmorShard : BasicArmorBonus Replaces ArmorBonus
{
	Default
	{
	Radius 20;
	Height 16;
	Inventory.Pickupmessage "$GOTARMBONUS";
	Inventory.Icon "BON2I0";
	Armor.Savepercent 33.1;
	Armor.Saveamount 2;
	Armor.Maxsaveamount 300;
	+COUNTITEM;
	+INVENTORY.NEVERRESPAWN;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.PickupSound "items/armorbonus";
	}
	States
	{
	Spawn:
	    TNT1 A 0;
		TNT1 A 0 A_JumpIf(getCVAR("Dox_SimplePickups")==true,"Spawn2");
	NULL A 0 A_jump(128,2);
	NULL A 0 A_ChangeFlag("XFLIP",1);
	TNT1 A 0;
	    TNT1 A 0 A_Jump(256, "Spawn1", "Spawn2", "Spawn3");
		Loop;
		
	Spawn1:
		BON2 AAABCDDDCB 2;
		Loop;
	Spawn2:
		BON2 IIIJKLLLKJ 2;
		Loop;
	Spawn3:
		BON2 MMMNOPPPON 2;
		Loop;
	}
	 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 10;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

Class ArmorShardDroped : BasicArmorBonus
{
	Default
	{
	Radius 20;
	Height 16;
	Inventory.Pickupmessage "$GOTARMBONUS";
	Inventory.Icon "BON2I0";
	Armor.Savepercent 33.1;
	Armor.Saveamount 5;
	Armor.Maxsaveamount 300;
	+COUNTITEM;
	+INVENTORY.NEVERRESPAWN;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.PickupSound "items/armorbonus";
	}
	States
	{
	Spawn:
        //TNT1 A 0 A_CheckSight ("Spawn2")
		BON2 AAABCDB 2; //A_SpawnItem("GreenFlareSmall",0,7)
		Loop;
	Spawn2:
		BON2 A 9;
		Goto Spawn;
	}
	 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 10;
			return true;
		}
		Else
		{
		return false;
		}
	}
}


Class Stimpack2 : Health Replaces Stimpack
{
	Default
	{
	Inventory.Amount 10;
	Inventory.PickupMessage "$GOTSTIM";
	Health.LowMessage 10, "At least it'll help ease the pain...";
	Inventory.PickupSound "GOTHPS";
	}
	States
	{
	Spawn:
	    TNT1 A 0;

	TNT1 A 0;
		TNT1 A 0 A_Jump(100,"Spawn1","spawn2");
		MEDK F -1;
		Stop;
		
		
	Spawn1:
	MEDK H -1;
	Stop;
	Spawn2:
	MEDK B -1;
	Stop;
	
	}
	 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 50;
			return true;
		}
		Else
		{
		return false;
		}
	}
}

// Medikit -----------------------------------------------------------------

Class Medikit2 : Health Replaces Medikit
{
	Default
	{
	Inventory.Amount 25;
	Inventory.PickupMessage "$GOTMEDIKIT";
	Health.LowMessage 25, "$GOTMEDINEED";
	Health.LowMessage 10, "Picked up a medikit. That was close...";
	Inventory.PickupSound "GOTHPB";
	}
	States
	{
	Spawn:
	    TNT1 A 0;

	TNT1 A 0;
		TNT1 A 0 A_Jump(100,"Spawn1","spawn2");
		MEDK E -1;
		Stop;
		
		
	Spawn1:
	MEDK G -1;
	Stop;
	Spawn2:
	MEDK A -1;
	Stop;
	}
 override bool TryPickup (in out Actor toucher)
	{
	If( Super.trypickup(Toucher))
		{
			toucher.Score += 100;
			return true;
		}
		Else
		{
		return false;
		}
	}
}
